{"version":3,"sources":["./src/app/reducers/custom-route-serializer.ts","./src/environments/environment.ts","./src/app/reducers/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Params, RouterStateSnapshot } from '@angular/router';\r\nimport { RouterStateSerializer } from '@ngrx/router-store';\r\n\r\nexport interface RouterStateUrl {\r\n  url: string;\r\n  params: Params;\r\n  queryParams: Params;\r\n}\r\n\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const {\r\n      url,\r\n      root: { queryParams },\r\n    } = routerState;\r\n    const { params } = route;\r\n\r\n    // Only return an object including the URL, params and query params\r\n    // instead of the entire snapshot\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  api: 'https://jsonplaceholder.typicode.com'\r\n};\r\n","import {\r\n  ActionReducer,\r\n  ActionReducerMap,\r\n  createFeatureSelector,\r\n  createSelector,\r\n  MetaReducer\r\n} from '@ngrx/store';\r\nimport {\r\n  routerReducer, RouterReducerState\r\n} from '@ngrx/router-store';\r\n\r\nimport { RouterStateUrl } from './custom-route-serializer';\r\nimport { environment } from '@environments/environment';\r\n\r\nexport interface State {\r\n  router: RouterReducerState<RouterStateUrl>;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<State> = {\r\n  router: routerReducer\r\n};\r\n\r\n\r\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\r\n\r\nexport const getRouterState = createFeatureSelector<RouterReducerState<RouterStateUrl>>(\r\n  'router'\r\n);\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n\r\n  constructor() {}\r\n\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { LocationStrategy, HashLocationStrategy, } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { NgModule } from '@angular/core';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\r\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\r\n\r\nimport { environment } from '@environments/environment';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { reducers, metaReducers } from './reducers';\r\nimport { CustomSerializer } from './reducers/custom-route-serializer';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    StoreRouterConnectingModule.forRoot({\r\n      serializer: CustomSerializer\r\n    }),\r\n    StoreModule.forRoot(reducers, { metaReducers }),\r\n    EffectsModule.forRoot([]),\r\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production })\r\n  ],\r\n  providers: [\r\n    { provide: 'API_URL',        useValue: environment.api },\r\n    { provide: LocationStrategy, useClass: HashLocationStrategy }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () => import('./todos/todos.module').then(m => m.TodosModule)\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {\r\n    preloadingStrategy: PreloadAllModules\r\n  })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}