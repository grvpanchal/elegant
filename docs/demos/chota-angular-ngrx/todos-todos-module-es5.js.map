{"version":3,"sources":["webpack:///node_modules/@ngrx/entity/__ivy_ngcc__/fesm2015/entity.js","webpack:///src/app/todos/actions/index.ts","webpack:///src/app/todos/actions/todos-ui.actions.ts","webpack:///src/app/todos/actions/todos.actions.ts","webpack:///src/app/todos/components/footer/footer.component.ts","webpack:///src/app/todos/components/footer/footer.component.html","webpack:///src/app/todos/components/index.ts","webpack:///src/app/todos/components/new-todo/new-todo.component.ts","webpack:///src/app/todos/components/new-todo/new-todo.component.html","webpack:///src/app/todos/components/todo/todo.component.ts","webpack:///src/app/todos/components/todo/todo.component.html","webpack:///src/app/todos/containers/index.ts","webpack:///src/app/todos/containers/layout/layout.container.ts","webpack:///src/app/todos/containers/layout/layout.container.html","webpack:///src/app/todos/containers/todo-detail/todo-detail.container.ts","webpack:///src/app/todos/containers/todo-detail/todo-detail.container.html","webpack:///src/app/todos/containers/todo-list/todo-list.container.ts","webpack:///src/app/todos/containers/todo-list/todo-list.container.html","webpack:///src/app/todos/effects/index.ts","webpack:///src/app/todos/effects/todos.effects.ts","webpack:///src/app/todos/guards/index.ts","webpack:///src/app/todos/guards/todos.guard.ts","webpack:///src/app/todos/reducers/index.ts","webpack:///src/app/todos/reducers/todos-ui.reducer.ts","webpack:///src/app/todos/reducers/todos.reducer.ts","webpack:///src/app/todos/selectors/index.ts","webpack:///src/app/todos/selectors/todos.selectors.ts","webpack:///src/app/todos/services/index.ts","webpack:///src/app/todos/services/todos.service.ts","webpack:///src/app/todos/states/index.ts","webpack:///src/app/todos/states/todos.state.ts","webpack:///src/app/todos/todos-routing.module.ts","webpack:///src/app/todos/todos.module.ts","webpack:///src/app/utils/validators.ts"],"names":["getInitialEntityState","ids","entities","createInitialStateFactory","getInitialState","additionalState","Object","assign","createSelectorsFactory","getSelectors","selectState","selectIds","state","selectEntities","selectAll","map","id","selectTotal","length","DidMutate","EntitiesOnly","Both","None","createStateOperator","mutator","operation","arg","clonedEntityState","didMutate","selectIdValue","entity","selectId","key","undefined","console","warn","toString","createUnsortedStateAdapter","addOneMutably","push","addManyMutably","setAllMutably","setOneMutably","removeOneMutably","removeManyMutably","keysOrPredicate","keys","Array","filter","removeAll","takeNewKey","update","original","updated","changes","newKey","hasNewKey","updateOneMutably","updateManyMutably","updates","newKeys","didMutateEntities","didMutateIds","mapMutably","reduce","change","upsertOneMutably","upsertManyMutably","added","didMutateByUpdated","didMutateByAdded","addOne","addMany","addAll","setAll","setOne","updateOne","updateMany","upsertOne","upsertMany","removeOne","removeMany","createSortedStateAdapter","sort","newModels","models","model","merge","val","takeUpdatedModel","originalIds","updatedIndexes","index","every","i","updatesOrMap","j","modelId","entityId","concat","slice","forEach","createEntityAdapter","options","sortComparer","instance","stateFactory","selectorsFactory","stateAdapter","DictionaryNum","Dictionary","UpdateStr","UpdateNum","EntityState","EntityDefinition","EntityStateAdapter","EntitySelectors","EntityAdapter","loadTodosRequest","loadTodosSuccess","loadTodosFail","addTodoRequest","addTodoSuccess","addTodoFail","updateTodoRequest","updateTodoSuccess","updateTodoFail","deleteTodoRequest","deleteTodoSuccess","deleteTodoFail","addTodo","updateTodo","deleteTodo","loadTodos","FooterComponent","selector","templateUrl","changeDetection","OnPush","COMPONENTS","NewTodoComponent","saveTodo","textField","required","isBlank","valid","text","value","setValue","emitEvent","emit","TodoComponent","checkField","valueChanges","subscribe","_todo","completed","editing","title","setTimeout","textInput","nativeElement","focus","todo","activeEditMode","updateText","CONTAINERS","LayoutContainer","store","counter$","pipe","filter$","Math","floor","random","action","dispatch","onSaveTodo","TodoDetailContainer","todo$","TodoListContainer","todos$","EFFECTS","TodosEffects","actions$","todosService","getAllTodos","todos","error","addTodoRequest$","createTodo","newTodo","updateTodoRequest$","deleteTodoRequest$","GUARDS","TodosGuard","checkTodos","total","dispatchLoadTodos","reducers","todosUI","metaReducers","production","getTodosModuleState","initialState","loadingTodos","errorLoadingTodos","loadingAddTodo","errorAddTodo","loadingUpdateTodo","errorUpdateTodo","loadingDeleteTodo","errorDeleteTodo","todosUIReducer","todosReducer","geTodosState","getCountAllTodos","getEntitiesTodos","getVisibleTodos","router","params","t","getTodo","getCountVisibleTodos","getFilter","SERVICES","TodosService","apiUrl","http","url","get","post","response","patch","todosAdapter","routes","path","component","canActivate","TodosRoutingModule","forChild","imports","exports","TodosModule","forFeature","declarations","providers","CustomValidators","control","trim","is_blank"],"mappings":"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","file":"todos-todos-module-es5.js","sourcesContent":["/**\n * @license NgRx 9.2.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/entity_state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @return {?}\n */\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\n/**\n * @template V\n * @return {?}\n */\nfunction createInitialStateFactory() {\n    /**\n     * @param {?=} additionalState\n     * @return {?}\n     */\n    function getInitialState(additionalState = {}) {\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/state_selectors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @return {?}\n */\nfunction createSelectorsFactory() {\n    /**\n     * @param {?=} selectState\n     * @return {?}\n     */\n    function getSelectors(selectState) {\n        /** @type {?} */\n        const selectIds = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.ids);\n        /** @type {?} */\n        const selectEntities = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.entities);\n        /** @type {?} */\n        const selectAll = createSelector(selectIds, selectEntities, (/**\n         * @param {?} ids\n         * @param {?} entities\n         * @return {?}\n         */\n        (ids, entities) => ids.map((/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => ((/** @type {?} */ (entities)))[id]))));\n        /** @type {?} */\n        const selectTotal = createSelector(selectIds, (/**\n         * @param {?} ids\n         * @return {?}\n         */\n        ids => ids.length));\n        if (!selectState) {\n            return {\n                selectIds,\n                selectEntities,\n                selectAll,\n                selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst DidMutate = {\n    EntitiesOnly: 0,\n    Both: 1,\n    None: 2,\n};\nDidMutate[DidMutate.EntitiesOnly] = 'EntitiesOnly';\nDidMutate[DidMutate.Both] = 'Both';\nDidMutate[DidMutate.None] = 'None';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nfunction createStateOperator(mutator) {\n    return (/**\n     * @template S\n     * @param {?} arg\n     * @param {?} state\n     * @return {?}\n     */\n    function operation(arg, state) {\n        /** @type {?} */\n        const clonedEntityState = {\n            ids: [...state.ids],\n            entities: Object.assign({}, state.entities),\n        };\n        /** @type {?} */\n        const didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return Object.assign(Object.assign({}, state), { entities: clonedEntityState.entities });\n        }\n        return state;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} entity\n * @param {?} selectId\n * @return {?}\n */\nfunction selectIdValue(entity, selectId) {\n    /** @type {?} */\n    const key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/unsorted_state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nfunction createUnsortedStateAdapter(selectId) {\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(entities, state) {\n        /** @type {?} */\n        let didMutate = false;\n        for (const entity of entities) {\n            didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function setAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function setOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            state.entities[key] = entity;\n            return DidMutate.EntitiesOnly;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    /**\n     * @param {?} keysOrPredicate\n     * @param {?} state\n     * @return {?}\n     */\n    function removeManyMutably(keysOrPredicate, state) {\n        /** @type {?} */\n        const keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter((/**\n             * @param {?} key\n             * @return {?}\n             */\n            (key) => keysOrPredicate(state.entities[key])));\n        /** @type {?} */\n        const didMutate = keys\n            .filter((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => key in state.entities))\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => delete state.entities[key])).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @return {?}\n             */\n            (id) => id in state.entities));\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    /**\n     * @param {?} keys\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeNewKey(keys, update, state) {\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        /** @type {?} */\n        const hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const newKeys = {};\n        updates = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => update.id in state.entities));\n        /** @type {?} */\n        const didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            /** @type {?} */\n            const didMutateIds = updates.filter((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => takeNewKey(newKeys, update, state))).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map((/**\n                 * @param {?} id\n                 * @return {?}\n                 */\n                (id) => newKeys[id] || id));\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    /**\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(map, state) {\n        /** @type {?} */\n        const changes = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        /** @type {?} */\n        const updates = changes.filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ id }) => id in state.entities));\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(setAllMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/sorted_state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nfunction createSortedStateAdapter(selectId, sort) {\n    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    /**\n     * @param {?} newModels\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(newModels, state) {\n        /** @type {?} */\n        const models = newModels.filter((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => !(selectIdValue(model, selectId) in state.entities)));\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function setAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function setOneMutably(entity, state) {\n        /** @type {?} */\n        const id = selectIdValue(entity, selectId);\n        if (id in state.entities) {\n            state.ids = state.ids.filter((/**\n             * @param {?} val\n             * @return {?}\n             */\n            (val) => val !== id));\n            merge([entity], state);\n            return DidMutate.Both;\n        }\n        else {\n            return addOneMutably(entity, state);\n        }\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} models\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const models = [];\n        /** @type {?} */\n        const didMutateIds = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => takeUpdatedModel(models, update, state))).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            /** @type {?} */\n            const originalIds = state.ids;\n            /** @type {?} */\n            const updatedIndexes = [];\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @param {?} index\n             * @return {?}\n             */\n            (id, index) => {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes.push(index);\n                    return false;\n                }\n            }));\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes.every((/**\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (i) => state.ids[i] === originalIds[i]))) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    /**\n     * @param {?} updatesOrMap\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(updatesOrMap, state) {\n        /** @type {?} */\n        const updates = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function merge(models, state) {\n        models.sort(sort);\n        /** @type {?} */\n        const ids = [];\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        let j = 0;\n        while (i < models.length && j < state.ids.length) {\n            /** @type {?} */\n            const model = models[i];\n            /** @type {?} */\n            const modelId = selectIdValue(model, selectId);\n            /** @type {?} */\n            const entityId = state.ids[j];\n            /** @type {?} */\n            const entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach((/**\n         * @param {?} model\n         * @param {?} i\n         * @return {?}\n         */\n        (model, i) => {\n            state.entities[selectId(model)] = model;\n        }));\n    }\n    return {\n        removeOne,\n        removeMany,\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(setAllMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/create_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nfunction createEntityAdapter(options = {}) {\n    const { selectId, sortComparer } = Object.assign({ sortComparer: false, selectId: (/**\n         * @param {?} instance\n         * @return {?}\n         */\n        (instance) => instance.id) }, options);\n    /** @type {?} */\n    const stateFactory = createInitialStateFactory();\n    /** @type {?} */\n    const selectorsFactory = createSelectorsFactory();\n    /** @type {?} */\n    const stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return Object.assign(Object.assign(Object.assign({ selectId,\n        sortComparer }, stateFactory), selectorsFactory), stateAdapter);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/models.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction DictionaryNum() { }\n/**\n * @abstract\n * @template T\n */\nclass Dictionary {\n}\n/**\n * @record\n * @template T\n */\nfunction UpdateStr() { }\nif (false) {\n    /** @type {?} */\n    UpdateStr.prototype.id;\n    /** @type {?} */\n    UpdateStr.prototype.changes;\n}\n/**\n * @record\n * @template T\n */\nfunction UpdateNum() { }\nif (false) {\n    /** @type {?} */\n    UpdateNum.prototype.id;\n    /** @type {?} */\n    UpdateNum.prototype.changes;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityState() { }\nif (false) {\n    /** @type {?} */\n    EntityState.prototype.ids;\n    /** @type {?} */\n    EntityState.prototype.entities;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityDefinition() { }\nif (false) {\n    /** @type {?} */\n    EntityDefinition.prototype.selectId;\n    /** @type {?} */\n    EntityDefinition.prototype.sortComparer;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityStateAdapter() { }\nif (false) {\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addMany = function (entities, state) { };\n    /**\n     * @deprecated addAll has been renamed. Use setAll instead.\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addAll = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.setAll = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.setOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeOne = function (key, state) { };\n    /**\n     * @template S\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeOne = function (key, state) { };\n    /**\n     * @template S\n     * @param {?} keys\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (keys, state) { };\n    /**\n     * @template S\n     * @param {?} keys\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (keys, state) { };\n    /**\n     * @template S\n     * @param {?} predicate\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (predicate, state) { };\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeAll = function (state) { };\n    /**\n     * @template S\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.updateOne = function (update, state) { };\n    /**\n     * @template S\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.updateMany = function (updates, state) { };\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.upsertOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.upsertMany = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.map = function (map, state) { };\n}\n/**\n * @record\n * @template T, V\n */\nfunction EntitySelectors() { }\nif (false) {\n    /** @type {?} */\n    EntitySelectors.prototype.selectIds;\n    /** @type {?} */\n    EntitySelectors.prototype.selectEntities;\n    /** @type {?} */\n    EntitySelectors.prototype.selectAll;\n    /** @type {?} */\n    EntitySelectors.prototype.selectTotal;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityAdapter() { }\nif (false) {\n    /** @type {?} */\n    EntityAdapter.prototype.selectId;\n    /** @type {?} */\n    EntityAdapter.prototype.sortComparer;\n    /**\n     * @return {?}\n     */\n    EntityAdapter.prototype.getInitialState = function () { };\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    EntityAdapter.prototype.getInitialState = function (state) { };\n    /**\n     * @return {?}\n     */\n    EntityAdapter.prototype.getSelectors = function () { };\n    /**\n     * @template V\n     * @param {?} selectState\n     * @return {?}\n     */\n    EntityAdapter.prototype.getSelectors = function (selectState) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Dictionary, createEntityAdapter };\n\n//# sourceMappingURL=entity.js.map","export * from './todos.actions';\nexport * from './todos-ui.actions';\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Todo } from '@todos/models';\n\nexport const loadTodosRequest = createAction(\n  '[TodoModule] LoadTodosRequest'\n);\n\nexport const loadTodosSuccess = createAction(\n  '[TodoModule] LoadTodosSuccess'\n);\n\nexport const loadTodosFail = createAction(\n  '[TodoModule] LoadTodosFail',\n  props<{ error: string }>()\n);\n\nexport const addTodoRequest = createAction(\n  '[TodoModule] AddTodoRequest',\n  props<{ todo: Todo }>()\n);\n\nexport const addTodoSuccess = createAction(\n  '[TodoModule] AddTodoSuccess',\n);\n\nexport const addTodoFail = createAction(\n  '[TodoModule] AddTodoFail',\n  props<{ error: string }>()\n);\n\nexport const updateTodoRequest = createAction(\n  '[TodoModule] UpdateTodoRequest',\n  props<{ update: Update<Todo> }>()\n);\n\nexport const updateTodoSuccess = createAction(\n  '[TodoModule] updateTodoSuccess'\n);\n\nexport const updateTodoFail = createAction(\n  '[TodoModule] UpdateTodoFail',\n  props<{ error: string }>()\n);\n\nexport const deleteTodoRequest = createAction(\n  '[TodoModule] DeleteTodoRequest',\n  props<{ id: number }>()\n);\n\nexport const deleteTodoSuccess = createAction(\n  '[TodoModule] DeleteTodoSuccess'\n);\n\nexport const deleteTodoFail = createAction(\n  '[TodoModule] DeleteTodoFail',\n  props<{ error: string }>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Todo } from '@todos/models';\n\nexport const addTodo = createAction(\n  '[TodoModule] AddTodo',\n  props<{todo: Todo}>()\n);\n\nexport const updateTodo = createAction(\n  '[TodoModule] UpdateTodo',\n  props<{update: Update<Todo>}>()\n);\n\nexport const deleteTodo = createAction(\n  '[TodoModule] DeleteTodo',\n  props<{id: number}>()\n);\n\nexport const loadTodos = createAction(\n  '[TodoModule] LoadTodos',\n  props<{todos: Todo[]}>()\n);\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FooterComponent implements OnInit {\n\n  @Input() countTodos: number;\n  @Input() currentFilter: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  // TODO:\n  // clearCompleted() {\n  //   const action = new TodoActions.ClearCompletedAction();\n  //   this.store.dispatch(action);\n  // }\n\n  // TODO\n  // completedAll() {\n  //   const action = new TodoActions.CompletedAllAction();\n  //   this.store.dispatch(action);\n  // }\n\n}\n","<footer id=\"footer\" class=\"footer\">\n  <span id=\"todo-count\" class=\"todo-count\">{{ countTodos }} items left</span>\n  <ul id=\"filters\" class=\"filters\">\n    <li>\n      <a routerLink=\"/\" [class.selected]=\"currentFilter == 'all'\">\n        All\n      </a>\n    </li>\n    <li>\n      <a routerLink=\"/active\" [class.selected]=\"currentFilter == 'active'\">\n        Active\n      </a>\n    </li>\n    <li>\n      <a\n        routerLink=\"/completed\"\n        [class.selected]=\"currentFilter == 'completed'\"\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n  <!-- <button\n    id=\"clear-completed\"\n    class=\"clear-completed\"\n    (click)=\"clearCompleted()\"\n  >\n    Clear completed\n  </button> -->\n</footer>\n","import { FooterComponent } from './footer/footer.component';\nimport { NewTodoComponent } from './new-todo/new-todo.component';\nimport { TodoComponent } from './todo/todo.component';\n\nexport const COMPONENTS = [\n  FooterComponent,\n  NewTodoComponent,\n  TodoComponent\n];\n","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { CustomValidators } from '@utils/validators';\n\n@Component({\n  selector: 'app-new-todo',\n  templateUrl: './new-todo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NewTodoComponent implements OnInit {\n\n  textField: FormControl;\n\n  @Output() saveTodo: EventEmitter<string> = new EventEmitter();\n\n  constructor() {\n    this.textField = new FormControl('', [Validators.required, CustomValidators.isBlank]);\n  }\n\n  ngOnInit() {\n  }\n\n  addTodo() {\n    if (this.textField.valid) {\n      const text: string = this.textField.value;\n      this.textField.setValue('', { emitEvent: false });\n      this.saveTodo.emit(text);\n    }\n  }\n\n}\n","<input \n  id=\"new-todo\" \n  class=\"new-todo\" \n  type=\"text\" \n  autofocus \n  (keyup.enter)=\"addTodo()\"\n  placeholder=\"What needs to be done?\"\n  [formControl]=\"textField\" />\n    \n","import { Component, OnInit, Input, ViewChild, Output, EventEmitter, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Update } from '@ngrx/entity';\n\nimport { Todo } from '@todos/models';\nimport { CustomValidators } from '@app/utils/validators';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TodoComponent implements OnInit {\n\n  _todo: Todo;\n\n  @Input()\n  set todo(todo: Todo) {\n    this._todo = todo;\n    this.textField.setValue(this._todo.title);\n    this.checkField.setValue(this._todo.completed, {emitEvent: false});\n  }\n  @ViewChild('textInput', { static: true }) textInput: ElementRef;\n  textField: FormControl;\n  checkField: FormControl;\n  editing: boolean;\n\n  @Output() update: EventEmitter<Update<Todo>> = new EventEmitter();\n  @Output() delete: EventEmitter<number> = new EventEmitter();\n\n  constructor() {\n    this.textField = new FormControl('', [Validators.required, CustomValidators.isBlank]);\n    this.checkField = new FormControl(false);\n    this.checkField.valueChanges\n    .subscribe(state => {\n      const update = {\n        id: this._todo.id,\n        changes: {\n          completed: state\n        }\n      };\n      this.update.emit(update);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  updateText() {\n    if (this.textField.valid && this.editing) {\n      const update = {\n        id: this._todo.id,\n        changes: {\n          title: this.textField.value\n        }\n      };\n      this.update.emit(update);\n      this.editing = false;\n    }\n  }\n\n  activeEditMode() {\n    this.editing = true;\n    setTimeout(() => {\n      this.textInput.nativeElement.focus();\n    });\n  }\n\n  deleteTodo() {\n    this.delete.emit(this._todo.id);\n  }\n\n}\n","<li [class.completed]=\"_todo.completed\" [class.editing]=\"editing\">\n  <div class=\"view\">\n    <input\n    class=\"toggle\"\n    type=\"checkbox\"\n    [formControl]=\"checkField\"/>\n    <label\n      (dblclick)=\"activeEditMode()\">\n      {{ _todo.title }}\n    </label>\n    <a class=\"detail\" [routerLink]=\"['/detail', _todo.id]\">></a>\n    <button class=\"destroy\" (click)=\"deleteTodo()\"></button>\n  </div>\n  <input\n    class=\"edit\"\n    type=\"text\"\n    #textInput\n    (keyup.enter)=\"updateText()\"\n    (blur)=\"updateText()\"\n    [formControl]=\"textField\"\n    [hidden]=\"editing\" />\n</li>","import { LayoutContainer } from './layout/layout.container';\nimport { TodoListContainer } from './todo-list/todo-list.container';\nimport { TodoDetailContainer } from './todo-detail/todo-detail.container';\n\nexport const CONTAINERS = [\n  LayoutContainer,\n  TodoListContainer,\n  TodoDetailContainer\n];\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { TodosModuleState } from '@todos/states';\nimport { addTodoRequest } from '@todos/actions';\nimport { getCountVisibleTodos, getFilter } from '@todos/selectors';\nimport { Todo } from '@todos/models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.container.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n// tslint:disable-next-line: component-class-suffix\nexport class LayoutContainer implements OnInit {\n\n  counter$: Observable<number>;\n  filter$: Observable<string>;\n\n  constructor(\n    private store: Store<TodosModuleState>,\n  ) {\n    this.counter$ = this.store.pipe(\n      select(getCountVisibleTodos)\n    );\n    this.filter$ = this.store.pipe(\n      select(getFilter)\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  onSaveTodo(title: string) {\n    const todo: Todo = {\n      id: Math.floor(Math.random() * (300 - 200)) + 200,\n      title,\n      completed: false\n    };\n    const action = addTodoRequest({todo});\n    this.store.dispatch(action);\n  }\n\n}\n","<section class=\"todoapp\">\n  <header class=\"header\">\n    <h1>todos</h1>\n    <app-new-todo (saveTodo)=\"onSaveTodo($event)\"></app-new-todo>\n  </header>\n  <app-todo-list></app-todo-list>\n  <app-footer\n    [countTodos]=\"counter$ | async\"\n    [currentFilter]=\"filter$ | async\"\n  ></app-footer>\n</section>\n<footer class=\"info\">\n  <p>Double-click to edit a todo</p>\n  <p>Written by <a href=\"http://twitter.com/nicobytes\">Nicolas Molina</a></p>\n  <p>\n    Using <a href=\"https://angular.io/\">Angular</a> and\n    <a href=\"https://ngrx.github.io/\">ngrx/store</a>\n  </p>\n  <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n</footer>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { TodosModuleState } from '@todos/states';\nimport { getTodo } from '@todos/selectors';\nimport { Todo } from '@todos/models';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-todo-detail',\n  templateUrl: './todo-detail.container.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n// tslint:disable-next-line: component-class-suffix\nexport class TodoDetailContainer implements OnInit {\n\n  todo$: Observable<Todo>;\n\n  constructor(\n    private store: Store<TodosModuleState>\n  ) {\n    this.todo$ = this.store.pipe(\n      select(getTodo),\n      filter(todo => todo !== null)\n    );\n  }\n\n  ngOnInit() {\n  }\n}\n","<section id=\"main\" class=\"main\" *ngIf=\"todo$ | async as todo\">\n  <h1>{{ todo.title }}</h1>\n  <p>{{ todo.completed }}</p>\n</section>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { TodosModuleState } from '@todos/states';\nimport { deleteTodoRequest, updateTodoRequest } from '@todos/actions';\nimport { getVisibleTodos } from '@todos/selectors';\nimport { Todo } from '@todos/models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.container.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n// tslint:disable-next-line: component-class-suffix\nexport class TodoListContainer implements OnInit {\n\n  todos$: Observable<Todo[]>;\n  checkField: FormControl;\n\n  constructor(\n    private store: Store<TodosModuleState>,\n  ) {\n    this.checkField = new FormControl(false);\n    this.todos$ = this.store.pipe(\n      select(getVisibleTodos)\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  // TODO\n  // toggleAll() {\n  //  this.store.dispatch(new TodoActions.CompletedAllAction());\n  // }\n\n  onUpdate(update: Update<Todo>) {\n    const action = updateTodoRequest({update});\n    this.store.dispatch(action);\n  }\n\n  onDelete(id: number) {\n    const action = deleteTodoRequest({id});\n    this.store.dispatch(action);\n  }\n}\n","<section id=\"main\" class=\"main\" *ngIf=\"todos$ | async as todos\">\n  <!-- <div class=\"toogle-view\" *ngIf=\"todos.length > 0\">\n    <input\n      id=\"toggle-all\"\n      class=\"toggle-all\"\n      type=\"checkbox\"\n      [formControl]=\"checkField\"\n    />\n    <label (click)=\"toggleAll()\">Mark all as complete</label>\n  </div> -->\n  <ul id=\"todo-list\" class=\"todo-list\">\n    <app-todo\n      (update)=\"onUpdate($event)\"\n      (delete)=\"onDelete($event)\"\n      [todo]=\"todo\"\n      *ngFor=\"let todo of todos\"\n    ></app-todo>\n  </ul>\n</section>\n","import { TodosEffects } from './todos.effects';\n\nexport const EFFECTS: any[] = [\n  TodosEffects\n];\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { switchMap, catchError, mergeMap, map } from 'rxjs/operators';\n\nimport {\n  loadTodos,\n  loadTodosRequest,\n  loadTodosSuccess,\n  loadTodosFail,\n  addTodo,\n  addTodoRequest,\n  addTodoSuccess,\n  addTodoFail,\n  updateTodo,\n  updateTodoRequest,\n  updateTodoSuccess,\n  updateTodoFail,\n  deleteTodo,\n  deleteTodoRequest,\n  deleteTodoSuccess,\n  deleteTodoFail\n} from '@todos/actions';\n\nimport { TodosService } from '@todos/services/todos.service';\n\n@Injectable()\nexport class TodosEffects {\n\n  loadTodosRequest = createEffect(() => this.actions$.pipe(\n    ofType(loadTodosRequest),\n      switchMap(() => {\n      return this.todosService.getAllTodos()\n        .pipe(\n          mergeMap((todos) => [\n            loadTodos({ todos }),\n            loadTodosSuccess(),\n          ]),\n          catchError(error => of(loadTodosFail({ error }))),\n        );\n    }),\n  ));\n\n  addTodoRequest$ = createEffect(() => this.actions$.pipe(\n    ofType(addTodoRequest),\n    switchMap((action) => {\n      return this.todosService.createTodo(action.todo)\n        .pipe(\n          mergeMap((newTodo) => [\n            addTodo({ todo: newTodo }),\n            addTodoSuccess(),\n          ]),\n          catchError(error => of(addTodoFail({ error }))),\n        );\n    }),\n  ));\n\n  updateTodoRequest$ = createEffect(() => this.actions$.pipe(\n    ofType(updateTodoRequest),\n    switchMap((action) => {\n      const update = action.update;\n      return this.todosService.updateTodo(update.changes)\n        .pipe(\n          mergeMap(() => [\n            updateTodo({ update }),\n            updateTodoSuccess(),\n          ]),\n          catchError(error => of(updateTodoFail({ error }))),\n        );\n    }),\n  ));\n\n  deleteTodoRequest$ = createEffect(() => this.actions$.pipe(\n    ofType(deleteTodoRequest),\n    switchMap((action) => {\n      const id = action.id;\n      return this.todosService.deleteTodo(id)\n        .pipe(\n          mergeMap(() => [\n            deleteTodo({ id }),\n            deleteTodoSuccess(),\n          ]),\n          catchError(error => of(deleteTodoFail({ error }))),\n        );\n    }),\n  ));\n\n  constructor(\n    private actions$: Actions,\n    private todosService: TodosService\n  ) { }\n\n}\n","import { TodosGuard } from './todos.guard';\n\nexport const GUARDS: any[] = [\n  TodosGuard\n];\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable , of, forkJoin } from 'rxjs';\nimport { tap, take, switchMap, catchError } from 'rxjs/operators';\n\nimport { TodosModuleState } from '@todos/states';\nimport { getCountAllTodos } from '@todos/selectors';\nimport { loadTodosRequest } from '@todos/actions';\n\n@Injectable()\nexport class TodosGuard implements CanActivate {\n\n  constructor(\n    private store: Store<TodosModuleState>,\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return forkJoin([\n      this.checkTodos(),\n    ])\n    .pipe(\n      switchMap(() => of(true)),\n      catchError(() => of(false))\n    );\n  }\n\n  private checkTodos() {\n    return this.store.pipe(\n      select(getCountAllTodos),\n      tap(total => {\n        if (total === 0) {\n          this.dispatchLoadTodos();\n        }\n      }),\n      take(1)\n    );\n  }\n\n  private dispatchLoadTodos() {\n    const action = loadTodosRequest();\n    this.store.dispatch(action);\n  }\n\n}\n","import {\n  ActionReducerMap,\n  createFeatureSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '@environments/environment';\n\nimport { TodosModuleState } from '@todos/states';\n\nimport { todosReducer } from './todos.reducer';\nimport { todosUIReducer } from './todos-ui.reducer';\n\nexport const reducers: ActionReducerMap<TodosModuleState> = {\n  todos: todosReducer,\n  todosUI: todosUIReducer\n};\n\nexport const metaReducers: MetaReducer<TodosModuleState>[] = !environment.production ? [] : [];\n\nexport const getTodosModuleState = createFeatureSelector<TodosModuleState>(\n  'todos-module'\n);\n","import { createReducer, on } from '@ngrx/store';\nimport * as TodoUIActions from '@todos/actions/todos-ui.actions';\nimport { TodosUIState } from '@todos/states';\n\nexport const initialState: TodosUIState = {\n  loadingTodos: false,\n  errorLoadingTodos: null,\n  loadingAddTodo: false,\n  errorAddTodo: null,\n  loadingUpdateTodo: false,\n  errorUpdateTodo: null,\n  loadingDeleteTodo: false,\n  errorDeleteTodo: null,\n};\n\nexport const todosUIReducer = createReducer(\n  initialState,\n  on(TodoUIActions.loadTodosRequest, (state) => {\n    return {\n      ...state,\n      loadingTodos: true,\n      errorLoadingTodos: null\n    };\n  }),\n  on(TodoUIActions.loadTodosSuccess, (state) => {\n    return {\n      ...state,\n      loadingTodos: false,\n      errorLoadingTodos: null\n    };\n  }),\n  on(TodoUIActions.loadTodosFail, (state, {error}) => {\n    return {\n      ...state,\n      loadingTodos: false,\n      errorLoadingTodos: error || null\n    };\n  }),\n  on(TodoUIActions.addTodoRequest, (state) => {\n    return {\n      ...state,\n      loadingAddTodo: true,\n      errorAddTodo: null\n    };\n  }),\n  on(TodoUIActions.loadTodosSuccess, (state) => {\n    return {\n      ...state,\n      loadingAddTodo: false,\n      errorAddTodo: null\n    };\n  }),\n  on(TodoUIActions.loadTodosFail, (state, {error}) => {\n    return {\n      ...state,\n      loadingAddTodo: false,\n      errorAddTodo: error || null\n    };\n  }),\n  on(TodoUIActions.updateTodoRequest, (state) => {\n    return {\n      ...state,\n      loadingUpdateTodo: true,\n      errorUpdateTodo: null\n    };\n  }),\n  on(TodoUIActions.updateTodoSuccess, (state) => {\n    return {\n      ...state,\n      loadingUpdateTodo: false,\n      errorUpdateTodo: null\n    };\n  }),\n  on(TodoUIActions.addTodoFail, (state, {error}) => {\n    return {\n      ...state,\n      loadingUpdateTodo: false,\n      errorUpdateTodo: error || null\n    };\n  }),\n  on(TodoUIActions.deleteTodoRequest, (state) => {\n    return {\n      ...state,\n      loadingDeleteTodo: true,\n      errorDeleteTodo: null\n    };\n  }),\n  on(TodoUIActions.deleteTodoSuccess, (state) => {\n    return {\n      ...state,\n      loadingDeleteTodo: false,\n      errorDeleteTodo: null\n    };\n  }),\n  on(TodoUIActions.deleteTodoFail, (state, {error}) => {\n    return {\n      ...state,\n      loadingDeleteTodo: false,\n      errorDeleteTodo: error || null\n    };\n  }),\n);","import { createReducer, on } from '@ngrx/store';\nimport * as TodoActions from '@todos/actions/todos.actions';\nimport { TodosState, todosAdapter } from '@todos/states';\n\nexport const initialState: TodosState = todosAdapter.getInitialState({\n  // additional entity state properties\n});\n\nexport const todosReducer = createReducer(\n  initialState,\n  on(TodoActions.loadTodos, (state, {todos}) => {\n    return todosAdapter.setAll(todos, state);\n  }),\n  on(TodoActions.addTodo, (state, {todo}) => {\n    return todosAdapter.addOne(todo, state);\n  }),\n  on(TodoActions.updateTodo, (state, {update}) => {\n    return todosAdapter.updateOne(update, state);\n  }),\n  on(TodoActions.deleteTodo, (state, {id}) => {\n    return todosAdapter.removeOne(id, state);\n  }),\n);\n","export * from './todos.selectors';\n","import { createSelector } from '@ngrx/store';\n\nimport { getTodosModuleState } from '@todos/reducers';\nimport { todosAdapter } from '@todos/states';\nimport { getRouterState } from '@app/reducers';\n\nexport const geTodosState = createSelector(\n  getTodosModuleState,\n  state => state.todos\n);\n\nexport const {\n  selectAll: getAllTodos,\n  selectTotal: getCountAllTodos,\n  selectEntities: getEntitiesTodos\n} = todosAdapter.getSelectors(geTodosState);\n\nexport const getVisibleTodos = createSelector(\n  getAllTodos,\n  getRouterState,\n  (todos, router) => {\n    if (router?.state?.params) {\n      const filter = router.state.params.filter;\n        switch (filter) {\n          default:\n            return todos;\n          case 'completed':\n            return todos.filter(t => t.completed);\n          case 'active':\n            return todos.filter(t => !t.completed);\n        }\n    }\n    return todos;\n  }\n);\n\nexport const getTodo = createSelector(\n  getEntitiesTodos,\n  getRouterState,\n  (entities, router) => {\n    if (router?.state?.params) {\n      const id = router.state.params.id;\n      return entities[id];\n    }\n    return null;\n  }\n);\n\nexport const getCountVisibleTodos = createSelector(\n  getVisibleTodos,\n  (todos) => todos.length\n);\n\n\nexport const getFilter = createSelector(\n  getRouterState,\n  (router) => {\n    if (router.state && router.state.params.filter) {\n      const filter = router.state.params.filter;\n      switch (filter) {\n        default:\n          return 'all';\n        case 'completed':\n          return 'completed';\n        case 'active':\n          return 'active';\n      }\n    }\n    return 'all';\n  }\n);\n","import { TodosService } from './todos.service';\n\nexport const SERVICES: any[] = [\n  TodosService\n];\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Todo } from '@todos/models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TodosService {\n\n  constructor(\n    @Inject('API_URL') private apiUrl: string,\n    private http: HttpClient\n  ) {\n  }\n\n  getAllTodos(): Observable<Todo[]> {\n    const url = `${this.apiUrl}/todos`;\n    return this.http.get<Todo[]>(url)\n    .pipe(\n      map(todos => todos.slice(0, 10)),\n    );\n  }\n\n  createTodo(todo: Todo): Observable<Todo> {\n    const url = `${this.apiUrl}/todos`;\n    return this.http.post(url, {todo})\n    .pipe(\n      map((response: any) => response.todo),\n    );\n  }\n\n  updateTodo(todo: Partial<Todo>): Observable<Todo> {\n    const url = `${this.apiUrl}/todos/${todo.id}`;\n    return this.http.patch(url, {todo})\n    .pipe(\n      map((response: any) => response.todo),\n    );\n  }\n\n  deleteTodo(id: number): Observable<Todo> {\n    const url = `${this.apiUrl}/todos/${id}`;\n    return this.http.delete(url)\n    .pipe(\n      map((response: any) => response.todo),\n    );\n  }\n\n}\n","export * from './todos.state';\nexport * from './todos-ui.state';\nexport * from './todos-module.state';\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Todo } from '@todos/models';\n\n// tslint:disable-next-line: no-empty-interface\nexport interface TodosState extends EntityState<Todo> {}\n\nexport const todosAdapter: EntityAdapter<Todo> = createEntityAdapter<Todo>();\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutContainer } from './containers/layout/layout.container';\nimport { TodoDetailContainer } from './containers/todo-detail/todo-detail.container';\nimport { TodosGuard } from '@todos/guards/todos.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutContainer,\n    canActivate: [ TodosGuard ]\n  },\n  {\n    path: ':filter',\n    component: LayoutContainer,\n    canActivate: [ TodosGuard ]\n  },\n  {\n    path: 'detail/:id',\n    component: TodoDetailContainer,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TodosRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { TodosRoutingModule } from './todos-routing.module';\n\nimport * as fromComponents from './components';\nimport * as fromContainers from './containers';\nimport * as fromReducers from './reducers';\nimport * as fromServices from './services';\nimport * as fromEffects from './effects';\nimport * as fromGuards from './guards';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TodosRoutingModule,\n    StoreModule.forFeature('todos-module', fromReducers.reducers, {\n      metaReducers: fromReducers.metaReducers\n    }),\n    EffectsModule.forFeature(fromEffects.EFFECTS)\n  ],\n  declarations: [\n    ...fromComponents.COMPONENTS,\n    ...fromContainers.CONTAINERS\n  ],\n  providers: [\n    ...fromServices.SERVICES,\n    ...fromGuards.GUARDS\n  ]\n})\nexport class TodosModule { }\n","import { FormControl } from '@angular/forms';\n\nexport class CustomValidators {\n\n  static isBlank(control: FormControl): { [key: string]: boolean } | null {\n    const value: string = control.value;\n    if (value === null || value === '') {\n      return null;\n    }\n    if (value.trim() === '') {\n      return { is_blank: true };\n    }\n    return null;\n  }\n\n}\n"]}