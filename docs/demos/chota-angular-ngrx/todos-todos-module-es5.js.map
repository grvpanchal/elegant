{"version":3,"sources":["webpack:///src/app/todos/states/todos.state.ts","webpack:///src/app/todos/actions/todos.actions.ts","webpack:///src/app/todos/services/todos.service.ts","webpack:///node_modules/@ngrx/entity/__ivy_ngcc__/fesm2015/entity.js","webpack:///src/app/todos/selectors/index.ts","webpack:///src/app/utils/validators.ts","webpack:///src/app/todos/actions/todos-ui.actions.ts","webpack:///src/app/todos/components/footer/footer.component.ts","webpack:///src/app/todos/components/footer/footer.component.html","webpack:///src/app/todos/reducers/index.ts","webpack:///src/app/todos/services/index.ts","webpack:///src/app/todos/containers/todo-list/todo-list.container.ts","webpack:///src/app/todos/containers/todo-list/todo-list.container.html","webpack:///src/app/todos/components/todo/todo.component.ts","webpack:///src/app/todos/components/todo/todo.component.html","webpack:///src/app/todos/containers/index.ts","webpack:///src/app/todos/reducers/todos-ui.reducer.ts","webpack:///src/app/todos/states/index.ts","webpack:///src/app/todos/components/new-todo/new-todo.component.ts","webpack:///src/app/todos/components/new-todo/new-todo.component.html","webpack:///src/app/todos/guards/todos.guard.ts","webpack:///src/app/todos/todos-routing.module.ts","webpack:///src/app/todos/guards/index.ts","webpack:///src/app/todos/containers/layout/layout.container.ts","webpack:///src/app/todos/containers/layout/layout.container.html","webpack:///src/app/todos/actions/index.ts","webpack:///src/app/todos/containers/todo-detail/todo-detail.container.ts","webpack:///src/app/todos/containers/todo-detail/todo-detail.container.html","webpack:///src/app/todos/selectors/todos.selectors.ts","webpack:///src/app/todos/effects/index.ts","webpack:///src/app/todos/effects/todos.effects.ts","webpack:///src/app/todos/components/index.ts","webpack:///src/app/todos/reducers/todos.reducer.ts","webpack:///src/app/todos/todos.module.ts"],"names":["todosAdapter","addTodo","updateTodo","deleteTodo","loadTodos","TodosService","apiUrl","http","url","get","pipe","todos","slice","todo","post","response","id","patch","getInitialEntityState","ids","entities","createInitialStateFactory","getInitialState","additionalState","Object","assign","createSelectorsFactory","getSelectors","selectState","selectIds","state","selectEntities","selectAll","map","selectTotal","length","DidMutate","EntitiesOnly","Both","None","createStateOperator","mutator","operation","arg","clonedEntityState","didMutate","selectIdValue","entity","selectId","key","undefined","console","warn","toString","createUnsortedStateAdapter","addOneMutably","push","addManyMutably","setAllMutably","setOneMutably","removeOneMutably","removeManyMutably","keysOrPredicate","keys","Array","filter","removeAll","takeNewKey","update","original","updated","changes","newKey","hasNewKey","updateOneMutably","updateManyMutably","updates","newKeys","didMutateEntities","didMutateIds","mapMutably","reduce","change","upsertOneMutably","upsertManyMutably","added","didMutateByUpdated","didMutateByAdded","addOne","addMany","addAll","setAll","setOne","updateOne","updateMany","upsertOne","upsertMany","removeOne","removeMany","createSortedStateAdapter","sort","newModels","models","model","merge","val","takeUpdatedModel","originalIds","updatedIndexes","index","every","i","updatesOrMap","j","modelId","entityId","concat","forEach","createEntityAdapter","options","sortComparer","instance","stateFactory","selectorsFactory","stateAdapter","DictionaryNum","Dictionary","UpdateStr","UpdateNum","EntityState","EntityDefinition","EntityStateAdapter","EntitySelectors","EntityAdapter","CustomValidators","control","value","trim","is_blank","loadTodosRequest","loadTodosSuccess","loadTodosFail","addTodoRequest","addTodoSuccess","addTodoFail","updateTodoRequest","updateTodoSuccess","updateTodoFail","deleteTodoRequest","deleteTodoSuccess","deleteTodoFail","FooterComponent","selector","templateUrl","changeDetection","OnPush","countTodos","currentFilter","reducers","todosUI","metaReducers","production","getTodosModuleState","SERVICES","TodoListContainer","store","checkField","todos$","action","dispatch","TodoComponent","textField","required","isBlank","valueChanges","subscribe","_todo","completed","emit","valid","editing","title","setTimeout","textInput","nativeElement","focus","setValue","emitEvent","activeEditMode","updateText","CONTAINERS","initialState","loadingTodos","errorLoadingTodos","loadingAddTodo","errorAddTodo","loadingUpdateTodo","errorUpdateTodo","loadingDeleteTodo","errorDeleteTodo","todosUIReducer","error","NewTodoComponent","saveTodo","text","TodosGuard","checkTodos","total","dispatchLoadTodos","routes","path","component","canActivate","TodosRoutingModule","forChild","imports","exports","GUARDS","LayoutContainer","counter$","filter$","Math","floor","random","onSaveTodo","TodoDetailContainer","todo$","geTodosState","getAllTodos","getCountAllTodos","getEntitiesTodos","getVisibleTodos","router","params","t","getTodo","getCountVisibleTodos","getFilter","EFFECTS","TodosEffects","actions$","todosService","addTodoRequest$","createTodo","newTodo","updateTodoRequest$","deleteTodoRequest$","COMPONENTS","todosReducer","TodosModule","forFeature","declarations","providers"],"mappings":"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","file":"todos-todos-module-es5.js","sourcesContent":["import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { Todo } from '@todos/models';\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\nexport interface TodosState extends EntityState<Todo> {}\r\n\r\nexport const todosAdapter: EntityAdapter<Todo> = createEntityAdapter<Todo>();\r\n\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\nimport { Todo } from '@todos/models';\r\n\r\nexport const addTodo = createAction(\r\n  '[TodoModule] AddTodo',\r\n  props<{todo: Todo}>()\r\n);\r\n\r\nexport const updateTodo = createAction(\r\n  '[TodoModule] UpdateTodo',\r\n  props<{update: Update<Todo>}>()\r\n);\r\n\r\nexport const deleteTodo = createAction(\r\n  '[TodoModule] DeleteTodo',\r\n  props<{id: number}>()\r\n);\r\n\r\nexport const loadTodos = createAction(\r\n  '[TodoModule] LoadTodos',\r\n  props<{todos: Todo[]}>()\r\n);\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Todo } from '@todos/models';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TodosService {\r\n\r\n  constructor(\r\n    @Inject('API_URL') private apiUrl: string,\r\n    private http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  getAllTodos(): Observable<Todo[]> {\r\n    const url = `${this.apiUrl}/todos`;\r\n    return this.http.get<Todo[]>(url)\r\n    .pipe(\r\n      map(todos => todos.slice(0, 10)),\r\n    );\r\n  }\r\n\r\n  createTodo(todo: Todo): Observable<Todo> {\r\n    const url = `${this.apiUrl}/todos`;\r\n    return this.http.post(url, {todo})\r\n    .pipe(\r\n      map((response: any) => response.todo),\r\n    );\r\n  }\r\n\r\n  updateTodo(todo: Partial<Todo>): Observable<Todo> {\r\n    const url = `${this.apiUrl}/todos/${todo.id}`;\r\n    return this.http.patch(url, {todo})\r\n    .pipe(\r\n      map((response: any) => response.todo),\r\n    );\r\n  }\r\n\r\n  deleteTodo(id: number): Observable<Todo> {\r\n    const url = `${this.apiUrl}/todos/${id}`;\r\n    return this.http.delete(url)\r\n    .pipe(\r\n      map((response: any) => response.todo),\r\n    );\r\n  }\r\n\r\n}\r\n","/**\n * @license NgRx 9.2.1\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/entity_state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @return {?}\n */\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\n/**\n * @template V\n * @return {?}\n */\nfunction createInitialStateFactory() {\n    /**\n     * @param {?=} additionalState\n     * @return {?}\n     */\n    function getInitialState(additionalState = {}) {\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/state_selectors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @return {?}\n */\nfunction createSelectorsFactory() {\n    /**\n     * @param {?=} selectState\n     * @return {?}\n     */\n    function getSelectors(selectState) {\n        /** @type {?} */\n        const selectIds = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.ids);\n        /** @type {?} */\n        const selectEntities = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.entities);\n        /** @type {?} */\n        const selectAll = createSelector(selectIds, selectEntities, (/**\n         * @param {?} ids\n         * @param {?} entities\n         * @return {?}\n         */\n        (ids, entities) => ids.map((/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => ((/** @type {?} */ (entities)))[id]))));\n        /** @type {?} */\n        const selectTotal = createSelector(selectIds, (/**\n         * @param {?} ids\n         * @return {?}\n         */\n        ids => ids.length));\n        if (!selectState) {\n            return {\n                selectIds,\n                selectEntities,\n                selectAll,\n                selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst DidMutate = {\n    EntitiesOnly: 0,\n    Both: 1,\n    None: 2,\n};\nDidMutate[DidMutate.EntitiesOnly] = 'EntitiesOnly';\nDidMutate[DidMutate.Both] = 'Both';\nDidMutate[DidMutate.None] = 'None';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nfunction createStateOperator(mutator) {\n    return (/**\n     * @template S\n     * @param {?} arg\n     * @param {?} state\n     * @return {?}\n     */\n    function operation(arg, state) {\n        /** @type {?} */\n        const clonedEntityState = {\n            ids: [...state.ids],\n            entities: Object.assign({}, state.entities),\n        };\n        /** @type {?} */\n        const didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return Object.assign(Object.assign({}, state), { entities: clonedEntityState.entities });\n        }\n        return state;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} entity\n * @param {?} selectId\n * @return {?}\n */\nfunction selectIdValue(entity, selectId) {\n    /** @type {?} */\n    const key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/unsorted_state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nfunction createUnsortedStateAdapter(selectId) {\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(entities, state) {\n        /** @type {?} */\n        let didMutate = false;\n        for (const entity of entities) {\n            didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function setAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function setOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            state.entities[key] = entity;\n            return DidMutate.EntitiesOnly;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    /**\n     * @param {?} keysOrPredicate\n     * @param {?} state\n     * @return {?}\n     */\n    function removeManyMutably(keysOrPredicate, state) {\n        /** @type {?} */\n        const keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter((/**\n             * @param {?} key\n             * @return {?}\n             */\n            (key) => keysOrPredicate(state.entities[key])));\n        /** @type {?} */\n        const didMutate = keys\n            .filter((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => key in state.entities))\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => delete state.entities[key])).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @return {?}\n             */\n            (id) => id in state.entities));\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    /**\n     * @param {?} keys\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeNewKey(keys, update, state) {\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        /** @type {?} */\n        const hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const newKeys = {};\n        updates = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => update.id in state.entities));\n        /** @type {?} */\n        const didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            /** @type {?} */\n            const didMutateIds = updates.filter((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => takeNewKey(newKeys, update, state))).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map((/**\n                 * @param {?} id\n                 * @return {?}\n                 */\n                (id) => newKeys[id] || id));\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    /**\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(map, state) {\n        /** @type {?} */\n        const changes = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        /** @type {?} */\n        const updates = changes.filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ id }) => id in state.entities));\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(setAllMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/sorted_state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nfunction createSortedStateAdapter(selectId, sort) {\n    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    /**\n     * @param {?} newModels\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(newModels, state) {\n        /** @type {?} */\n        const models = newModels.filter((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => !(selectIdValue(model, selectId) in state.entities)));\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function setAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function setOneMutably(entity, state) {\n        /** @type {?} */\n        const id = selectIdValue(entity, selectId);\n        if (id in state.entities) {\n            state.ids = state.ids.filter((/**\n             * @param {?} val\n             * @return {?}\n             */\n            (val) => val !== id));\n            merge([entity], state);\n            return DidMutate.Both;\n        }\n        else {\n            return addOneMutably(entity, state);\n        }\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} models\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const models = [];\n        /** @type {?} */\n        const didMutateIds = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => takeUpdatedModel(models, update, state))).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            /** @type {?} */\n            const originalIds = state.ids;\n            /** @type {?} */\n            const updatedIndexes = [];\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @param {?} index\n             * @return {?}\n             */\n            (id, index) => {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes.push(index);\n                    return false;\n                }\n            }));\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes.every((/**\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (i) => state.ids[i] === originalIds[i]))) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    /**\n     * @param {?} updatesOrMap\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(updatesOrMap, state) {\n        /** @type {?} */\n        const updates = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function merge(models, state) {\n        models.sort(sort);\n        /** @type {?} */\n        const ids = [];\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        let j = 0;\n        while (i < models.length && j < state.ids.length) {\n            /** @type {?} */\n            const model = models[i];\n            /** @type {?} */\n            const modelId = selectIdValue(model, selectId);\n            /** @type {?} */\n            const entityId = state.ids[j];\n            /** @type {?} */\n            const entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach((/**\n         * @param {?} model\n         * @param {?} i\n         * @return {?}\n         */\n        (model, i) => {\n            state.entities[selectId(model)] = model;\n        }));\n    }\n    return {\n        removeOne,\n        removeMany,\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(setAllMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/create_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nfunction createEntityAdapter(options = {}) {\n    const { selectId, sortComparer } = Object.assign({ sortComparer: false, selectId: (/**\n         * @param {?} instance\n         * @return {?}\n         */\n        (instance) => instance.id) }, options);\n    /** @type {?} */\n    const stateFactory = createInitialStateFactory();\n    /** @type {?} */\n    const selectorsFactory = createSelectorsFactory();\n    /** @type {?} */\n    const stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return Object.assign(Object.assign(Object.assign({ selectId,\n        sortComparer }, stateFactory), selectorsFactory), stateAdapter);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/models.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction DictionaryNum() { }\n/**\n * @abstract\n * @template T\n */\nclass Dictionary {\n}\n/**\n * @record\n * @template T\n */\nfunction UpdateStr() { }\nif (false) {\n    /** @type {?} */\n    UpdateStr.prototype.id;\n    /** @type {?} */\n    UpdateStr.prototype.changes;\n}\n/**\n * @record\n * @template T\n */\nfunction UpdateNum() { }\nif (false) {\n    /** @type {?} */\n    UpdateNum.prototype.id;\n    /** @type {?} */\n    UpdateNum.prototype.changes;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityState() { }\nif (false) {\n    /** @type {?} */\n    EntityState.prototype.ids;\n    /** @type {?} */\n    EntityState.prototype.entities;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityDefinition() { }\nif (false) {\n    /** @type {?} */\n    EntityDefinition.prototype.selectId;\n    /** @type {?} */\n    EntityDefinition.prototype.sortComparer;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityStateAdapter() { }\nif (false) {\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addMany = function (entities, state) { };\n    /**\n     * @deprecated addAll has been renamed. Use setAll instead.\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addAll = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.setAll = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.setOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeOne = function (key, state) { };\n    /**\n     * @template S\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeOne = function (key, state) { };\n    /**\n     * @template S\n     * @param {?} keys\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (keys, state) { };\n    /**\n     * @template S\n     * @param {?} keys\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (keys, state) { };\n    /**\n     * @template S\n     * @param {?} predicate\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (predicate, state) { };\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeAll = function (state) { };\n    /**\n     * @template S\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.updateOne = function (update, state) { };\n    /**\n     * @template S\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.updateMany = function (updates, state) { };\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.upsertOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.upsertMany = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.map = function (map, state) { };\n}\n/**\n * @record\n * @template T, V\n */\nfunction EntitySelectors() { }\nif (false) {\n    /** @type {?} */\n    EntitySelectors.prototype.selectIds;\n    /** @type {?} */\n    EntitySelectors.prototype.selectEntities;\n    /** @type {?} */\n    EntitySelectors.prototype.selectAll;\n    /** @type {?} */\n    EntitySelectors.prototype.selectTotal;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityAdapter() { }\nif (false) {\n    /** @type {?} */\n    EntityAdapter.prototype.selectId;\n    /** @type {?} */\n    EntityAdapter.prototype.sortComparer;\n    /**\n     * @return {?}\n     */\n    EntityAdapter.prototype.getInitialState = function () { };\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    EntityAdapter.prototype.getInitialState = function (state) { };\n    /**\n     * @return {?}\n     */\n    EntityAdapter.prototype.getSelectors = function () { };\n    /**\n     * @template V\n     * @param {?} selectState\n     * @return {?}\n     */\n    EntityAdapter.prototype.getSelectors = function (selectState) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Dictionary, createEntityAdapter };\n\n//# sourceMappingURL=entity.js.map","export * from './todos.selectors';\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n\r\n  static isBlank(control: FormControl): { [key: string]: boolean } | null {\r\n    const value: string = control.value;\r\n    if (value === null || value === '') {\r\n      return null;\r\n    }\r\n    if (value.trim() === '') {\r\n      return { is_blank: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { Todo } from '@todos/models';\r\n\r\nexport const loadTodosRequest = createAction(\r\n  '[TodoModule] LoadTodosRequest'\r\n);\r\n\r\nexport const loadTodosSuccess = createAction(\r\n  '[TodoModule] LoadTodosSuccess'\r\n);\r\n\r\nexport const loadTodosFail = createAction(\r\n  '[TodoModule] LoadTodosFail',\r\n  props<{ error: string }>()\r\n);\r\n\r\nexport const addTodoRequest = createAction(\r\n  '[TodoModule] AddTodoRequest',\r\n  props<{ todo: Todo }>()\r\n);\r\n\r\nexport const addTodoSuccess = createAction(\r\n  '[TodoModule] AddTodoSuccess',\r\n);\r\n\r\nexport const addTodoFail = createAction(\r\n  '[TodoModule] AddTodoFail',\r\n  props<{ error: string }>()\r\n);\r\n\r\nexport const updateTodoRequest = createAction(\r\n  '[TodoModule] UpdateTodoRequest',\r\n  props<{ update: Update<Todo> }>()\r\n);\r\n\r\nexport const updateTodoSuccess = createAction(\r\n  '[TodoModule] updateTodoSuccess'\r\n);\r\n\r\nexport const updateTodoFail = createAction(\r\n  '[TodoModule] UpdateTodoFail',\r\n  props<{ error: string }>()\r\n);\r\n\r\nexport const deleteTodoRequest = createAction(\r\n  '[TodoModule] DeleteTodoRequest',\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const deleteTodoSuccess = createAction(\r\n  '[TodoModule] DeleteTodoSuccess'\r\n);\r\n\r\nexport const deleteTodoFail = createAction(\r\n  '[TodoModule] DeleteTodoFail',\r\n  props<{ error: string }>()\r\n);\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  @Input() countTodos: number;\r\n  @Input() currentFilter: string;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // TODO:\r\n  // clearCompleted() {\r\n  //   const action = new TodoActions.ClearCompletedAction();\r\n  //   this.store.dispatch(action);\r\n  // }\r\n\r\n  // TODO\r\n  // completedAll() {\r\n  //   const action = new TodoActions.CompletedAllAction();\r\n  //   this.store.dispatch(action);\r\n  // }\r\n\r\n}\r\n","<footer id=\"footer\" class=\"footer\">\r\n  <span id=\"todo-count\" class=\"todo-count\">{{ countTodos }} items left</span>\r\n  <ul id=\"filters\" class=\"filters\">\r\n    <li>\r\n      <a routerLink=\"/\" [class.selected]=\"currentFilter == 'all'\">\r\n        All\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a routerLink=\"/active\" [class.selected]=\"currentFilter == 'active'\">\r\n        Active\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        routerLink=\"/completed\"\r\n        [class.selected]=\"currentFilter == 'completed'\"\r\n      >\r\n        Completed\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <!-- <button\r\n    id=\"clear-completed\"\r\n    class=\"clear-completed\"\r\n    (click)=\"clearCompleted()\"\r\n  >\r\n    Clear completed\r\n  </button> -->\r\n</footer>\r\n","import {\r\n  ActionReducerMap,\r\n  createFeatureSelector,\r\n  MetaReducer\r\n} from '@ngrx/store';\r\nimport { environment } from '@environments/environment';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\n\r\nimport { todosReducer } from './todos.reducer';\r\nimport { todosUIReducer } from './todos-ui.reducer';\r\n\r\nexport const reducers: ActionReducerMap<TodosModuleState> = {\r\n  todos: todosReducer,\r\n  todosUI: todosUIReducer\r\n};\r\n\r\nexport const metaReducers: MetaReducer<TodosModuleState>[] = !environment.production ? [] : [];\r\n\r\nexport const getTodosModuleState = createFeatureSelector<TodosModuleState>(\r\n  'todos-module'\r\n);\r\n","import { TodosService } from './todos.service';\r\n\r\nexport const SERVICES: any[] = [\r\n  TodosService\r\n];\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\nimport { deleteTodoRequest, updateTodoRequest } from '@todos/actions';\r\nimport { getVisibleTodos } from '@todos/selectors';\r\nimport { Todo } from '@todos/models';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-todo-list',\r\n  templateUrl: './todo-list.container.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class TodoListContainer implements OnInit {\r\n\r\n  todos$: Observable<Todo[]>;\r\n  checkField: FormControl;\r\n\r\n  constructor(\r\n    private store: Store<TodosModuleState>,\r\n  ) {\r\n    this.checkField = new FormControl(false);\r\n    this.todos$ = this.store.pipe(\r\n      select(getVisibleTodos)\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // TODO\r\n  // toggleAll() {\r\n  //  this.store.dispatch(new TodoActions.CompletedAllAction());\r\n  // }\r\n\r\n  onUpdate(update: Update<Todo>) {\r\n    const action = updateTodoRequest({update});\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n  onDelete(id: number) {\r\n    const action = deleteTodoRequest({id});\r\n    this.store.dispatch(action);\r\n  }\r\n}\r\n","<section id=\"main\" class=\"main\" *ngIf=\"todos$ | async as todos\">\r\n  <!-- <div class=\"toogle-view\" *ngIf=\"todos.length > 0\">\r\n    <input\r\n      id=\"toggle-all\"\r\n      class=\"toggle-all\"\r\n      type=\"checkbox\"\r\n      [formControl]=\"checkField\"\r\n    />\r\n    <label (click)=\"toggleAll()\">Mark all as complete</label>\r\n  </div> -->\r\n  <ul id=\"todo-list\" class=\"todo-list\">\r\n    <app-todo\r\n      (update)=\"onUpdate($event)\"\r\n      (delete)=\"onDelete($event)\"\r\n      [todo]=\"todo\"\r\n      *ngFor=\"let todo of todos\"\r\n    ></app-todo>\r\n  </ul>\r\n</section>\r\n","import { Component, OnInit, Input, ViewChild, Output, EventEmitter, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { Todo } from '@todos/models';\r\nimport { CustomValidators } from '@app/utils/validators';\r\n\r\n@Component({\r\n  selector: 'app-todo',\r\n  templateUrl: './todo.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TodoComponent implements OnInit {\r\n\r\n  _todo: Todo;\r\n\r\n  @Input()\r\n  set todo(todo: Todo) {\r\n    this._todo = todo;\r\n    this.textField.setValue(this._todo.title);\r\n    this.checkField.setValue(this._todo.completed, {emitEvent: false});\r\n  }\r\n  @ViewChild('textInput', { static: true }) textInput: ElementRef;\r\n  textField: FormControl;\r\n  checkField: FormControl;\r\n  editing: boolean;\r\n\r\n  @Output() update: EventEmitter<Update<Todo>> = new EventEmitter();\r\n  @Output() delete: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() {\r\n    this.textField = new FormControl('', [Validators.required, CustomValidators.isBlank]);\r\n    this.checkField = new FormControl(false);\r\n    this.checkField.valueChanges\r\n    .subscribe(state => {\r\n      const update = {\r\n        id: this._todo.id,\r\n        changes: {\r\n          completed: state\r\n        }\r\n      };\r\n      this.update.emit(update);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateText() {\r\n    if (this.textField.valid && this.editing) {\r\n      const update = {\r\n        id: this._todo.id,\r\n        changes: {\r\n          title: this.textField.value\r\n        }\r\n      };\r\n      this.update.emit(update);\r\n      this.editing = false;\r\n    }\r\n  }\r\n\r\n  activeEditMode() {\r\n    this.editing = true;\r\n    setTimeout(() => {\r\n      this.textInput.nativeElement.focus();\r\n    });\r\n  }\r\n\r\n  deleteTodo() {\r\n    this.delete.emit(this._todo.id);\r\n  }\r\n\r\n}\r\n","<li [class.completed]=\"_todo.completed\" [class.editing]=\"editing\">\r\n  <div class=\"view\">\r\n    <input\r\n    class=\"toggle\"\r\n    type=\"checkbox\"\r\n    [formControl]=\"checkField\"/>\r\n    <label\r\n      (dblclick)=\"activeEditMode()\">\r\n      {{ _todo.title }}\r\n    </label>\r\n    <a class=\"detail\" [routerLink]=\"['/detail', _todo.id]\">></a>\r\n    <button class=\"destroy\" (click)=\"deleteTodo()\"></button>\r\n  </div>\r\n  <input\r\n    class=\"edit\"\r\n    type=\"text\"\r\n    #textInput\r\n    (keyup.enter)=\"updateText()\"\r\n    (blur)=\"updateText()\"\r\n    [formControl]=\"textField\"\r\n    [hidden]=\"editing\" />\r\n</li>","import { LayoutContainer } from './layout/layout.container';\r\nimport { TodoListContainer } from './todo-list/todo-list.container';\r\nimport { TodoDetailContainer } from './todo-detail/todo-detail.container';\r\n\r\nexport const CONTAINERS = [\r\n  LayoutContainer,\r\n  TodoListContainer,\r\n  TodoDetailContainer\r\n];\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as TodoUIActions from '@todos/actions/todos-ui.actions';\r\nimport { TodosUIState } from '@todos/states';\r\n\r\nexport const initialState: TodosUIState = {\r\n  loadingTodos: false,\r\n  errorLoadingTodos: null,\r\n  loadingAddTodo: false,\r\n  errorAddTodo: null,\r\n  loadingUpdateTodo: false,\r\n  errorUpdateTodo: null,\r\n  loadingDeleteTodo: false,\r\n  errorDeleteTodo: null,\r\n};\r\n\r\nexport const todosUIReducer = createReducer(\r\n  initialState,\r\n  on(TodoUIActions.loadTodosRequest, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingTodos: true,\r\n      errorLoadingTodos: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.loadTodosSuccess, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingTodos: false,\r\n      errorLoadingTodos: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.loadTodosFail, (state, {error}) => {\r\n    return {\r\n      ...state,\r\n      loadingTodos: false,\r\n      errorLoadingTodos: error || null\r\n    };\r\n  }),\r\n  on(TodoUIActions.addTodoRequest, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingAddTodo: true,\r\n      errorAddTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.loadTodosSuccess, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingAddTodo: false,\r\n      errorAddTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.loadTodosFail, (state, {error}) => {\r\n    return {\r\n      ...state,\r\n      loadingAddTodo: false,\r\n      errorAddTodo: error || null\r\n    };\r\n  }),\r\n  on(TodoUIActions.updateTodoRequest, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingUpdateTodo: true,\r\n      errorUpdateTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.updateTodoSuccess, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingUpdateTodo: false,\r\n      errorUpdateTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.addTodoFail, (state, {error}) => {\r\n    return {\r\n      ...state,\r\n      loadingUpdateTodo: false,\r\n      errorUpdateTodo: error || null\r\n    };\r\n  }),\r\n  on(TodoUIActions.deleteTodoRequest, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingDeleteTodo: true,\r\n      errorDeleteTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.deleteTodoSuccess, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingDeleteTodo: false,\r\n      errorDeleteTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.deleteTodoFail, (state, {error}) => {\r\n    return {\r\n      ...state,\r\n      loadingDeleteTodo: false,\r\n      errorDeleteTodo: error || null\r\n    };\r\n  }),\r\n);","export * from './todos.state';\r\nexport * from './todos-ui.state';\r\nexport * from './todos-module.state';\r\n","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { CustomValidators } from '@utils/validators';\r\n\r\n@Component({\r\n  selector: 'app-new-todo',\r\n  templateUrl: './new-todo.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NewTodoComponent implements OnInit {\r\n\r\n  textField: FormControl;\r\n\r\n  @Output() saveTodo: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor() {\r\n    this.textField = new FormControl('', [Validators.required, CustomValidators.isBlank]);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addTodo() {\r\n    if (this.textField.valid) {\r\n      const text: string = this.textField.value;\r\n      this.textField.setValue('', { emitEvent: false });\r\n      this.saveTodo.emit(text);\r\n    }\r\n  }\r\n\r\n}\r\n","<input \r\n  id=\"new-todo\" \r\n  class=\"new-todo\" \r\n  type=\"text\" \r\n  autofocus \r\n  (keyup.enter)=\"addTodo()\"\r\n  placeholder=\"What needs to be done?\"\r\n  [formControl]=\"textField\" />\r\n    \r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable , of, forkJoin } from 'rxjs';\r\nimport { tap, take, switchMap, catchError } from 'rxjs/operators';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\nimport { getCountAllTodos } from '@todos/selectors';\r\nimport { loadTodosRequest } from '@todos/actions';\r\n\r\n@Injectable()\r\nexport class TodosGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private store: Store<TodosModuleState>,\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return forkJoin([\r\n      this.checkTodos(),\r\n    ])\r\n    .pipe(\r\n      switchMap(() => of(true)),\r\n      catchError(() => of(false))\r\n    );\r\n  }\r\n\r\n  private checkTodos() {\r\n    return this.store.pipe(\r\n      select(getCountAllTodos),\r\n      tap(total => {\r\n        if (total === 0) {\r\n          this.dispatchLoadTodos();\r\n        }\r\n      }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  private dispatchLoadTodos() {\r\n    const action = loadTodosRequest();\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutContainer } from './containers/layout/layout.container';\r\nimport { TodoDetailContainer } from './containers/todo-detail/todo-detail.container';\r\nimport { TodosGuard } from '@todos/guards/todos.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutContainer,\r\n    canActivate: [ TodosGuard ]\r\n  },\r\n  {\r\n    path: ':filter',\r\n    component: LayoutContainer,\r\n    canActivate: [ TodosGuard ]\r\n  },\r\n  {\r\n    path: 'detail/:id',\r\n    component: TodoDetailContainer,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TodosRoutingModule { }\r\n","import { TodosGuard } from './todos.guard';\r\n\r\nexport const GUARDS: any[] = [\r\n  TodosGuard\r\n];\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\nimport { addTodoRequest } from '@todos/actions';\r\nimport { getCountVisibleTodos, getFilter } from '@todos/selectors';\r\nimport { Todo } from '@todos/models';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.container.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class LayoutContainer implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n  filter$: Observable<string>;\r\n\r\n  constructor(\r\n    private store: Store<TodosModuleState>,\r\n  ) {\r\n    this.counter$ = this.store.pipe(\r\n      select(getCountVisibleTodos)\r\n    );\r\n    this.filter$ = this.store.pipe(\r\n      select(getFilter)\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSaveTodo(title: string) {\r\n    const todo: Todo = {\r\n      id: Math.floor(Math.random() * (300 - 200)) + 200,\r\n      title,\r\n      completed: false\r\n    };\r\n    const action = addTodoRequest({todo});\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n}\r\n","<section class=\"todoapp\">\r\n  <header class=\"header\">\r\n    <h1>todos</h1>\r\n    <app-new-todo (saveTodo)=\"onSaveTodo($event)\"></app-new-todo>\r\n  </header>\r\n  <app-todo-list></app-todo-list>\r\n  <app-footer\r\n    [countTodos]=\"counter$ | async\"\r\n    [currentFilter]=\"filter$ | async\"\r\n  ></app-footer>\r\n</section>\r\n<footer class=\"info\">\r\n  <p>Double-click to edit a todo</p>\r\n  <p>Written by <a href=\"http://twitter.com/nicobytes\">Nicolas Molina</a></p>\r\n  <p>\r\n    Using <a href=\"https://angular.io/\">Angular</a> and\r\n    <a href=\"https://ngrx.github.io/\">ngrx/store</a>\r\n  </p>\r\n  <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\r\n</footer>\r\n","export * from './todos.actions';\r\nexport * from './todos-ui.actions';\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\nimport { getTodo } from '@todos/selectors';\r\nimport { Todo } from '@todos/models';\r\nimport { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-todo-detail',\r\n  templateUrl: './todo-detail.container.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class TodoDetailContainer implements OnInit {\r\n\r\n  todo$: Observable<Todo>;\r\n\r\n  constructor(\r\n    private store: Store<TodosModuleState>\r\n  ) {\r\n    this.todo$ = this.store.pipe(\r\n      select(getTodo),\r\n      filter(todo => todo !== null)\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<section id=\"main\" class=\"main\" *ngIf=\"todo$ | async as todo\">\r\n  <h1>{{ todo.title }}</h1>\r\n  <p>{{ todo.completed }}</p>\r\n</section>\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport { getTodosModuleState } from '@todos/reducers';\r\nimport { todosAdapter } from '@todos/states';\r\nimport { getRouterState } from '@app/reducers';\r\n\r\nexport const geTodosState = createSelector(\r\n  getTodosModuleState,\r\n  state => state.todos\r\n);\r\n\r\nexport const {\r\n  selectAll: getAllTodos,\r\n  selectTotal: getCountAllTodos,\r\n  selectEntities: getEntitiesTodos\r\n} = todosAdapter.getSelectors(geTodosState);\r\n\r\nexport const getVisibleTodos = createSelector(\r\n  getAllTodos,\r\n  getRouterState,\r\n  (todos, router) => {\r\n    if (router?.state?.params) {\r\n      const filter = router.state.params.filter;\r\n        switch (filter) {\r\n          default:\r\n            return todos;\r\n          case 'completed':\r\n            return todos.filter(t => t.completed);\r\n          case 'active':\r\n            return todos.filter(t => !t.completed);\r\n        }\r\n    }\r\n    return todos;\r\n  }\r\n);\r\n\r\nexport const getTodo = createSelector(\r\n  getEntitiesTodos,\r\n  getRouterState,\r\n  (entities, router) => {\r\n    if (router?.state?.params) {\r\n      const id = router.state.params.id;\r\n      return entities[id];\r\n    }\r\n    return null;\r\n  }\r\n);\r\n\r\nexport const getCountVisibleTodos = createSelector(\r\n  getVisibleTodos,\r\n  (todos) => todos.length\r\n);\r\n\r\n\r\nexport const getFilter = createSelector(\r\n  getRouterState,\r\n  (router) => {\r\n    if (router.state && router.state.params.filter) {\r\n      const filter = router.state.params.filter;\r\n      switch (filter) {\r\n        default:\r\n          return 'all';\r\n        case 'completed':\r\n          return 'completed';\r\n        case 'active':\r\n          return 'active';\r\n      }\r\n    }\r\n    return 'all';\r\n  }\r\n);\r\n","import { TodosEffects } from './todos.effects';\r\n\r\nexport const EFFECTS: any[] = [\r\n  TodosEffects\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType, createEffect } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { switchMap, catchError, mergeMap, map } from 'rxjs/operators';\r\n\r\nimport {\r\n  loadTodos,\r\n  loadTodosRequest,\r\n  loadTodosSuccess,\r\n  loadTodosFail,\r\n  addTodo,\r\n  addTodoRequest,\r\n  addTodoSuccess,\r\n  addTodoFail,\r\n  updateTodo,\r\n  updateTodoRequest,\r\n  updateTodoSuccess,\r\n  updateTodoFail,\r\n  deleteTodo,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoFail\r\n} from '@todos/actions';\r\n\r\nimport { TodosService } from '@todos/services/todos.service';\r\n\r\n@Injectable()\r\nexport class TodosEffects {\r\n\r\n  loadTodosRequest = createEffect(() => this.actions$.pipe(\r\n    ofType(loadTodosRequest),\r\n      switchMap(() => {\r\n      return this.todosService.getAllTodos()\r\n        .pipe(\r\n          mergeMap((todos) => [\r\n            loadTodos({ todos }),\r\n            loadTodosSuccess(),\r\n          ]),\r\n          catchError(error => of(loadTodosFail({ error }))),\r\n        );\r\n    }),\r\n  ));\r\n\r\n  addTodoRequest$ = createEffect(() => this.actions$.pipe(\r\n    ofType(addTodoRequest),\r\n    switchMap((action) => {\r\n      return this.todosService.createTodo(action.todo)\r\n        .pipe(\r\n          mergeMap((newTodo) => [\r\n            addTodo({ todo: newTodo }),\r\n            addTodoSuccess(),\r\n          ]),\r\n          catchError(error => of(addTodoFail({ error }))),\r\n        );\r\n    }),\r\n  ));\r\n\r\n  updateTodoRequest$ = createEffect(() => this.actions$.pipe(\r\n    ofType(updateTodoRequest),\r\n    switchMap((action) => {\r\n      const update = action.update;\r\n      return this.todosService.updateTodo(update.changes)\r\n        .pipe(\r\n          mergeMap(() => [\r\n            updateTodo({ update }),\r\n            updateTodoSuccess(),\r\n          ]),\r\n          catchError(error => of(updateTodoFail({ error }))),\r\n        );\r\n    }),\r\n  ));\r\n\r\n  deleteTodoRequest$ = createEffect(() => this.actions$.pipe(\r\n    ofType(deleteTodoRequest),\r\n    switchMap((action) => {\r\n      const id = action.id;\r\n      return this.todosService.deleteTodo(id)\r\n        .pipe(\r\n          mergeMap(() => [\r\n            deleteTodo({ id }),\r\n            deleteTodoSuccess(),\r\n          ]),\r\n          catchError(error => of(deleteTodoFail({ error }))),\r\n        );\r\n    }),\r\n  ));\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private todosService: TodosService\r\n  ) { }\r\n\r\n}\r\n","import { FooterComponent } from './footer/footer.component';\r\nimport { NewTodoComponent } from './new-todo/new-todo.component';\r\nimport { TodoComponent } from './todo/todo.component';\r\n// import AlertComponent from '../../../ui/atoms/Alert/Alert.component';\r\n// import ImageComponent from '../../../ui/atoms/Image/Image.component';\r\n\r\nexport const COMPONENTS = [\r\n  FooterComponent,\r\n  NewTodoComponent,\r\n  TodoComponent,\r\n  // AlertComponent,\r\n  // ImageComponent,\r\n];\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as TodoActions from '@todos/actions/todos.actions';\r\nimport { TodosState, todosAdapter } from '@todos/states';\r\n\r\nexport const initialState: TodosState = todosAdapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const todosReducer = createReducer(\r\n  initialState,\r\n  on(TodoActions.loadTodos, (state, {todos}) => {\r\n    return todosAdapter.setAll(todos, state);\r\n  }),\r\n  on(TodoActions.addTodo, (state, {todo}) => {\r\n    return todosAdapter.addOne(todo, state);\r\n  }),\r\n  on(TodoActions.updateTodo, (state, {update}) => {\r\n    return todosAdapter.updateOne(update, state);\r\n  }),\r\n  on(TodoActions.deleteTodo, (state, {id}) => {\r\n    return todosAdapter.removeOne(id, state);\r\n  }),\r\n);\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { TodosRoutingModule } from './todos-routing.module';\r\n\r\nimport * as fromComponents from './components';\r\nimport * as fromContainers from './containers';\r\nimport * as fromReducers from './reducers';\r\nimport * as fromServices from './services';\r\nimport * as fromEffects from './effects';\r\nimport * as fromGuards from './guards';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    TodosRoutingModule,\r\n    StoreModule.forFeature('todos-module', fromReducers.reducers, {\r\n      metaReducers: fromReducers.metaReducers\r\n    }),\r\n    EffectsModule.forFeature(fromEffects.EFFECTS)\r\n  ],\r\n  declarations: [\r\n    ...fromComponents.COMPONENTS,\r\n    ...fromContainers.CONTAINERS\r\n  ],\r\n  providers: [\r\n    ...fromServices.SERVICES,\r\n    ...fromGuards.GUARDS\r\n  ]\r\n})\r\nexport class TodosModule { }\r\n"]}