{"version":3,"sources":["./node_modules/@ngrx/entity/__ivy_ngcc__/fesm2015/entity.js","./src/app/todos/actions/index.ts","./src/app/todos/actions/todos-ui.actions.ts","./src/app/todos/actions/todos.actions.ts","./src/app/todos/components/footer/footer.component.ts","./src/app/todos/components/footer/footer.component.html","./src/app/todos/components/index.ts","./src/app/todos/components/new-todo/new-todo.component.ts","./src/app/todos/components/new-todo/new-todo.component.html","./src/app/todos/components/todo/todo.component.ts","./src/app/todos/components/todo/todo.component.html","./src/app/todos/containers/index.ts","./src/app/todos/containers/layout/layout.container.ts","./src/app/todos/containers/layout/layout.container.html","./src/app/todos/containers/todo-detail/todo-detail.container.ts","./src/app/todos/containers/todo-detail/todo-detail.container.html","./src/app/todos/containers/todo-list/todo-list.container.ts","./src/app/todos/containers/todo-list/todo-list.container.html","./src/app/todos/effects/index.ts","./src/app/todos/effects/todos.effects.ts","./src/app/todos/guards/index.ts","./src/app/todos/guards/todos.guard.ts","./src/app/todos/reducers/index.ts","./src/app/todos/reducers/todos-ui.reducer.ts","./src/app/todos/reducers/todos.reducer.ts","./src/app/todos/selectors/index.ts","./src/app/todos/selectors/todos.selectors.ts","./src/app/todos/services/index.ts","./src/app/todos/services/todos.service.ts","./src/app/todos/states/index.ts","./src/app/todos/states/todos.state.ts","./src/app/todos/todos-routing.module.ts","./src/app/todos/todos.module.ts","./src/app/utils/validators.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC6C;AACH;;AAE1C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,iDAAiD;AACjD;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,kEAAc;AACxC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,EAAE;AAC/B,mBAAmB,EAAE;AACrB,4BAA4B,kEAAc;AAC1C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAc;AACrC,4BAA4B,kEAAc;AAC1C,uBAAuB,kEAAc;AACrC,yBAAyB,kEAAc;AACvC;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sCAAsC;AACtC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mCAAmC;AACnC;AACA;AACA,iDAAiD,WAAW,uCAAuC;AACnG;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,+DAAS;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B;AAC/B;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,wCAAwC;AACxC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,KAAK;AACf;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,wCAAwC;AACxC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA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","file":"todos-todos-module-es2015.js","sourcesContent":["/**\n * @license NgRx 9.2.0\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/entity_state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @return {?}\n */\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\n/**\n * @template V\n * @return {?}\n */\nfunction createInitialStateFactory() {\n    /**\n     * @param {?=} additionalState\n     * @return {?}\n     */\n    function getInitialState(additionalState = {}) {\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/state_selectors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @return {?}\n */\nfunction createSelectorsFactory() {\n    /**\n     * @param {?=} selectState\n     * @return {?}\n     */\n    function getSelectors(selectState) {\n        /** @type {?} */\n        const selectIds = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.ids);\n        /** @type {?} */\n        const selectEntities = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.entities);\n        /** @type {?} */\n        const selectAll = createSelector(selectIds, selectEntities, (/**\n         * @param {?} ids\n         * @param {?} entities\n         * @return {?}\n         */\n        (ids, entities) => ids.map((/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => ((/** @type {?} */ (entities)))[id]))));\n        /** @type {?} */\n        const selectTotal = createSelector(selectIds, (/**\n         * @param {?} ids\n         * @return {?}\n         */\n        ids => ids.length));\n        if (!selectState) {\n            return {\n                selectIds,\n                selectEntities,\n                selectAll,\n                selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst DidMutate = {\n    EntitiesOnly: 0,\n    Both: 1,\n    None: 2,\n};\nDidMutate[DidMutate.EntitiesOnly] = 'EntitiesOnly';\nDidMutate[DidMutate.Both] = 'Both';\nDidMutate[DidMutate.None] = 'None';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nfunction createStateOperator(mutator) {\n    return (/**\n     * @template S\n     * @param {?} arg\n     * @param {?} state\n     * @return {?}\n     */\n    function operation(arg, state) {\n        /** @type {?} */\n        const clonedEntityState = {\n            ids: [...state.ids],\n            entities: Object.assign({}, state.entities),\n        };\n        /** @type {?} */\n        const didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return Object.assign(Object.assign({}, state), { entities: clonedEntityState.entities });\n        }\n        return state;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} entity\n * @param {?} selectId\n * @return {?}\n */\nfunction selectIdValue(entity, selectId) {\n    /** @type {?} */\n    const key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/unsorted_state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nfunction createUnsortedStateAdapter(selectId) {\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(entities, state) {\n        /** @type {?} */\n        let didMutate = false;\n        for (const entity of entities) {\n            didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function setAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function setOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            state.entities[key] = entity;\n            return DidMutate.EntitiesOnly;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    /**\n     * @param {?} keysOrPredicate\n     * @param {?} state\n     * @return {?}\n     */\n    function removeManyMutably(keysOrPredicate, state) {\n        /** @type {?} */\n        const keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter((/**\n             * @param {?} key\n             * @return {?}\n             */\n            (key) => keysOrPredicate(state.entities[key])));\n        /** @type {?} */\n        const didMutate = keys\n            .filter((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => key in state.entities))\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => delete state.entities[key])).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @return {?}\n             */\n            (id) => id in state.entities));\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    /**\n     * @param {?} keys\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeNewKey(keys, update, state) {\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        /** @type {?} */\n        const hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const newKeys = {};\n        updates = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => update.id in state.entities));\n        /** @type {?} */\n        const didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            /** @type {?} */\n            const didMutateIds = updates.filter((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => takeNewKey(newKeys, update, state))).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map((/**\n                 * @param {?} id\n                 * @return {?}\n                 */\n                (id) => newKeys[id] || id));\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    /**\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(map, state) {\n        /** @type {?} */\n        const changes = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        /** @type {?} */\n        const updates = changes.filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ id }) => id in state.entities));\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(setAllMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/sorted_state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nfunction createSortedStateAdapter(selectId, sort) {\n    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    /**\n     * @param {?} newModels\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(newModels, state) {\n        /** @type {?} */\n        const models = newModels.filter((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => !(selectIdValue(model, selectId) in state.entities)));\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function setAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function setOneMutably(entity, state) {\n        /** @type {?} */\n        const id = selectIdValue(entity, selectId);\n        if (id in state.entities) {\n            state.ids = state.ids.filter((/**\n             * @param {?} val\n             * @return {?}\n             */\n            (val) => val !== id));\n            merge([entity], state);\n            return DidMutate.Both;\n        }\n        else {\n            return addOneMutably(entity, state);\n        }\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} models\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const models = [];\n        /** @type {?} */\n        const didMutateIds = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => takeUpdatedModel(models, update, state))).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            /** @type {?} */\n            const originalIds = state.ids;\n            /** @type {?} */\n            const updatedIndexes = [];\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @param {?} index\n             * @return {?}\n             */\n            (id, index) => {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes.push(index);\n                    return false;\n                }\n            }));\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes.every((/**\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (i) => state.ids[i] === originalIds[i]))) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    /**\n     * @param {?} updatesOrMap\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(updatesOrMap, state) {\n        /** @type {?} */\n        const updates = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function merge(models, state) {\n        models.sort(sort);\n        /** @type {?} */\n        const ids = [];\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        let j = 0;\n        while (i < models.length && j < state.ids.length) {\n            /** @type {?} */\n            const model = models[i];\n            /** @type {?} */\n            const modelId = selectIdValue(model, selectId);\n            /** @type {?} */\n            const entityId = state.ids[j];\n            /** @type {?} */\n            const entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach((/**\n         * @param {?} model\n         * @param {?} i\n         * @return {?}\n         */\n        (model, i) => {\n            state.entities[selectId(model)] = model;\n        }));\n    }\n    return {\n        removeOne,\n        removeMany,\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(setAllMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/create_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nfunction createEntityAdapter(options = {}) {\n    const { selectId, sortComparer } = Object.assign({ sortComparer: false, selectId: (/**\n         * @param {?} instance\n         * @return {?}\n         */\n        (instance) => instance.id) }, options);\n    /** @type {?} */\n    const stateFactory = createInitialStateFactory();\n    /** @type {?} */\n    const selectorsFactory = createSelectorsFactory();\n    /** @type {?} */\n    const stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return Object.assign(Object.assign(Object.assign({ selectId,\n        sortComparer }, stateFactory), selectorsFactory), stateAdapter);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/models.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction DictionaryNum() { }\n/**\n * @abstract\n * @template T\n */\nclass Dictionary {\n}\n/**\n * @record\n * @template T\n */\nfunction UpdateStr() { }\nif (false) {\n    /** @type {?} */\n    UpdateStr.prototype.id;\n    /** @type {?} */\n    UpdateStr.prototype.changes;\n}\n/**\n * @record\n * @template T\n */\nfunction UpdateNum() { }\nif (false) {\n    /** @type {?} */\n    UpdateNum.prototype.id;\n    /** @type {?} */\n    UpdateNum.prototype.changes;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityState() { }\nif (false) {\n    /** @type {?} */\n    EntityState.prototype.ids;\n    /** @type {?} */\n    EntityState.prototype.entities;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityDefinition() { }\nif (false) {\n    /** @type {?} */\n    EntityDefinition.prototype.selectId;\n    /** @type {?} */\n    EntityDefinition.prototype.sortComparer;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityStateAdapter() { }\nif (false) {\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addMany = function (entities, state) { };\n    /**\n     * @deprecated addAll has been renamed. Use setAll instead.\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addAll = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.setAll = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.setOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeOne = function (key, state) { };\n    /**\n     * @template S\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeOne = function (key, state) { };\n    /**\n     * @template S\n     * @param {?} keys\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (keys, state) { };\n    /**\n     * @template S\n     * @param {?} keys\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (keys, state) { };\n    /**\n     * @template S\n     * @param {?} predicate\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (predicate, state) { };\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeAll = function (state) { };\n    /**\n     * @template S\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.updateOne = function (update, state) { };\n    /**\n     * @template S\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.updateMany = function (updates, state) { };\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.upsertOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.upsertMany = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.map = function (map, state) { };\n}\n/**\n * @record\n * @template T, V\n */\nfunction EntitySelectors() { }\nif (false) {\n    /** @type {?} */\n    EntitySelectors.prototype.selectIds;\n    /** @type {?} */\n    EntitySelectors.prototype.selectEntities;\n    /** @type {?} */\n    EntitySelectors.prototype.selectAll;\n    /** @type {?} */\n    EntitySelectors.prototype.selectTotal;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityAdapter() { }\nif (false) {\n    /** @type {?} */\n    EntityAdapter.prototype.selectId;\n    /** @type {?} */\n    EntityAdapter.prototype.sortComparer;\n    /**\n     * @return {?}\n     */\n    EntityAdapter.prototype.getInitialState = function () { };\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    EntityAdapter.prototype.getInitialState = function (state) { };\n    /**\n     * @return {?}\n     */\n    EntityAdapter.prototype.getSelectors = function () { };\n    /**\n     * @template V\n     * @param {?} selectState\n     * @return {?}\n     */\n    EntityAdapter.prototype.getSelectors = function (selectState) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Dictionary, createEntityAdapter };\n\n//# sourceMappingURL=entity.js.map","export * from './todos.actions';\nexport * from './todos-ui.actions';\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { Todo } from '@todos/models';\n\nexport const loadTodosRequest = createAction(\n  '[TodoModule] LoadTodosRequest'\n);\n\nexport const loadTodosSuccess = createAction(\n  '[TodoModule] LoadTodosSuccess'\n);\n\nexport const loadTodosFail = createAction(\n  '[TodoModule] LoadTodosFail',\n  props<{ error: string }>()\n);\n\nexport const addTodoRequest = createAction(\n  '[TodoModule] AddTodoRequest',\n  props<{ todo: Todo }>()\n);\n\nexport const addTodoSuccess = createAction(\n  '[TodoModule] AddTodoSuccess',\n);\n\nexport const addTodoFail = createAction(\n  '[TodoModule] AddTodoFail',\n  props<{ error: string }>()\n);\n\nexport const updateTodoRequest = createAction(\n  '[TodoModule] UpdateTodoRequest',\n  props<{ update: Update<Todo> }>()\n);\n\nexport const updateTodoSuccess = createAction(\n  '[TodoModule] updateTodoSuccess'\n);\n\nexport const updateTodoFail = createAction(\n  '[TodoModule] UpdateTodoFail',\n  props<{ error: string }>()\n);\n\nexport const deleteTodoRequest = createAction(\n  '[TodoModule] DeleteTodoRequest',\n  props<{ id: number }>()\n);\n\nexport const deleteTodoSuccess = createAction(\n  '[TodoModule] DeleteTodoSuccess'\n);\n\nexport const deleteTodoFail = createAction(\n  '[TodoModule] DeleteTodoFail',\n  props<{ error: string }>()\n);\n","import { createAction, props } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\nimport { Todo } from '@todos/models';\n\nexport const addTodo = createAction(\n  '[TodoModule] AddTodo',\n  props<{todo: Todo}>()\n);\n\nexport const updateTodo = createAction(\n  '[TodoModule] UpdateTodo',\n  props<{update: Update<Todo>}>()\n);\n\nexport const deleteTodo = createAction(\n  '[TodoModule] DeleteTodo',\n  props<{id: number}>()\n);\n\nexport const loadTodos = createAction(\n  '[TodoModule] LoadTodos',\n  props<{todos: Todo[]}>()\n);\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FooterComponent implements OnInit {\n\n  @Input() countTodos: number;\n  @Input() currentFilter: string;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  // TODO:\n  // clearCompleted() {\n  //   const action = new TodoActions.ClearCompletedAction();\n  //   this.store.dispatch(action);\n  // }\n\n  // TODO\n  // completedAll() {\n  //   const action = new TodoActions.CompletedAllAction();\n  //   this.store.dispatch(action);\n  // }\n\n}\n","<footer id=\"footer\" class=\"footer\">\n  <span id=\"todo-count\" class=\"todo-count\">{{ countTodos }} items left</span>\n  <ul id=\"filters\" class=\"filters\">\n    <li>\n      <a routerLink=\"/\" [class.selected]=\"currentFilter == 'all'\">\n        All\n      </a>\n    </li>\n    <li>\n      <a routerLink=\"/active\" [class.selected]=\"currentFilter == 'active'\">\n        Active\n      </a>\n    </li>\n    <li>\n      <a\n        routerLink=\"/completed\"\n        [class.selected]=\"currentFilter == 'completed'\"\n      >\n        Completed\n      </a>\n    </li>\n  </ul>\n  <!-- <button\n    id=\"clear-completed\"\n    class=\"clear-completed\"\n    (click)=\"clearCompleted()\"\n  >\n    Clear completed\n  </button> -->\n</footer>\n","import { FooterComponent } from './footer/footer.component';\nimport { NewTodoComponent } from './new-todo/new-todo.component';\nimport { TodoComponent } from './todo/todo.component';\n\nexport const COMPONENTS = [\n  FooterComponent,\n  NewTodoComponent,\n  TodoComponent\n];\n","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { CustomValidators } from '@utils/validators';\n\n@Component({\n  selector: 'app-new-todo',\n  templateUrl: './new-todo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NewTodoComponent implements OnInit {\n\n  textField: FormControl;\n\n  @Output() saveTodo: EventEmitter<string> = new EventEmitter();\n\n  constructor() {\n    this.textField = new FormControl('', [Validators.required, CustomValidators.isBlank]);\n  }\n\n  ngOnInit() {\n  }\n\n  addTodo() {\n    if (this.textField.valid) {\n      const text: string = this.textField.value;\n      this.textField.setValue('', { emitEvent: false });\n      this.saveTodo.emit(text);\n    }\n  }\n\n}\n","<input \n  id=\"new-todo\" \n  class=\"new-todo\" \n  type=\"text\" \n  autofocus \n  (keyup.enter)=\"addTodo()\"\n  placeholder=\"What needs to be done?\"\n  [formControl]=\"textField\" />\n    \n","import { Component, OnInit, Input, ViewChild, Output, EventEmitter, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Update } from '@ngrx/entity';\n\nimport { Todo } from '@todos/models';\nimport { CustomValidators } from '@app/utils/validators';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TodoComponent implements OnInit {\n\n  _todo: Todo;\n\n  @Input()\n  set todo(todo: Todo) {\n    this._todo = todo;\n    this.textField.setValue(this._todo.title);\n    this.checkField.setValue(this._todo.completed, {emitEvent: false});\n  }\n  @ViewChild('textInput', { static: true }) textInput: ElementRef;\n  textField: FormControl;\n  checkField: FormControl;\n  editing: boolean;\n\n  @Output() update: EventEmitter<Update<Todo>> = new EventEmitter();\n  @Output() delete: EventEmitter<number> = new EventEmitter();\n\n  constructor() {\n    this.textField = new FormControl('', [Validators.required, CustomValidators.isBlank]);\n    this.checkField = new FormControl(false);\n    this.checkField.valueChanges\n    .subscribe(state => {\n      const update = {\n        id: this._todo.id,\n        changes: {\n          completed: state\n        }\n      };\n      this.update.emit(update);\n    });\n  }\n\n  ngOnInit() {\n  }\n\n  updateText() {\n    if (this.textField.valid && this.editing) {\n      const update = {\n        id: this._todo.id,\n        changes: {\n          title: this.textField.value\n        }\n      };\n      this.update.emit(update);\n      this.editing = false;\n    }\n  }\n\n  activeEditMode() {\n    this.editing = true;\n    setTimeout(() => {\n      this.textInput.nativeElement.focus();\n    });\n  }\n\n  deleteTodo() {\n    this.delete.emit(this._todo.id);\n  }\n\n}\n","<li [class.completed]=\"_todo.completed\" [class.editing]=\"editing\">\n  <div class=\"view\">\n    <input\n    class=\"toggle\"\n    type=\"checkbox\"\n    [formControl]=\"checkField\"/>\n    <label\n      (dblclick)=\"activeEditMode()\">\n      {{ _todo.title }}\n    </label>\n    <a class=\"detail\" [routerLink]=\"['/detail', _todo.id]\">></a>\n    <button class=\"destroy\" (click)=\"deleteTodo()\"></button>\n  </div>\n  <input\n    class=\"edit\"\n    type=\"text\"\n    #textInput\n    (keyup.enter)=\"updateText()\"\n    (blur)=\"updateText()\"\n    [formControl]=\"textField\"\n    [hidden]=\"editing\" />\n</li>","import { LayoutContainer } from './layout/layout.container';\nimport { TodoListContainer } from './todo-list/todo-list.container';\nimport { TodoDetailContainer } from './todo-detail/todo-detail.container';\n\nexport const CONTAINERS = [\n  LayoutContainer,\n  TodoListContainer,\n  TodoDetailContainer\n];\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { TodosModuleState } from '@todos/states';\nimport { addTodoRequest } from '@todos/actions';\nimport { getCountVisibleTodos, getFilter } from '@todos/selectors';\nimport { Todo } from '@todos/models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.container.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n// tslint:disable-next-line: component-class-suffix\nexport class LayoutContainer implements OnInit {\n\n  counter$: Observable<number>;\n  filter$: Observable<string>;\n\n  constructor(\n    private store: Store<TodosModuleState>,\n  ) {\n    this.counter$ = this.store.pipe(\n      select(getCountVisibleTodos)\n    );\n    this.filter$ = this.store.pipe(\n      select(getFilter)\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  onSaveTodo(title: string) {\n    const todo: Todo = {\n      id: Math.floor(Math.random() * (300 - 200)) + 200,\n      title,\n      completed: false\n    };\n    const action = addTodoRequest({todo});\n    this.store.dispatch(action);\n  }\n\n}\n","<section class=\"todoapp\">\n  <header class=\"header\">\n    <h1>todos</h1>\n    <app-new-todo (saveTodo)=\"onSaveTodo($event)\"></app-new-todo>\n  </header>\n  <app-todo-list></app-todo-list>\n  <app-footer\n    [countTodos]=\"counter$ | async\"\n    [currentFilter]=\"filter$ | async\"\n  ></app-footer>\n</section>\n<footer class=\"info\">\n  <p>Double-click to edit a todo</p>\n  <p>Written by <a href=\"http://twitter.com/nicobytes\">Nicolas Molina</a></p>\n  <p>\n    Using <a href=\"https://angular.io/\">Angular</a> and\n    <a href=\"https://ngrx.github.io/\">ngrx/store</a>\n  </p>\n  <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n</footer>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\n\nimport { TodosModuleState } from '@todos/states';\nimport { getTodo } from '@todos/selectors';\nimport { Todo } from '@todos/models';\nimport { Observable } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-todo-detail',\n  templateUrl: './todo-detail.container.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n// tslint:disable-next-line: component-class-suffix\nexport class TodoDetailContainer implements OnInit {\n\n  todo$: Observable<Todo>;\n\n  constructor(\n    private store: Store<TodosModuleState>\n  ) {\n    this.todo$ = this.store.pipe(\n      select(getTodo),\n      filter(todo => todo !== null)\n    );\n  }\n\n  ngOnInit() {\n  }\n}\n","<section id=\"main\" class=\"main\" *ngIf=\"todo$ | async as todo\">\n  <h1>{{ todo.title }}</h1>\n  <p>{{ todo.completed }}</p>\n</section>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Store, select } from '@ngrx/store';\nimport { Update } from '@ngrx/entity';\n\nimport { TodosModuleState } from '@todos/states';\nimport { deleteTodoRequest, updateTodoRequest } from '@todos/actions';\nimport { getVisibleTodos } from '@todos/selectors';\nimport { Todo } from '@todos/models';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.container.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\n// tslint:disable-next-line: component-class-suffix\nexport class TodoListContainer implements OnInit {\n\n  todos$: Observable<Todo[]>;\n  checkField: FormControl;\n\n  constructor(\n    private store: Store<TodosModuleState>,\n  ) {\n    this.checkField = new FormControl(false);\n    this.todos$ = this.store.pipe(\n      select(getVisibleTodos)\n    );\n  }\n\n  ngOnInit() {\n  }\n\n  // TODO\n  // toggleAll() {\n  //  this.store.dispatch(new TodoActions.CompletedAllAction());\n  // }\n\n  onUpdate(update: Update<Todo>) {\n    const action = updateTodoRequest({update});\n    this.store.dispatch(action);\n  }\n\n  onDelete(id: number) {\n    const action = deleteTodoRequest({id});\n    this.store.dispatch(action);\n  }\n}\n","<section id=\"main\" class=\"main\" *ngIf=\"todos$ | async as todos\">\n  <!-- <div class=\"toogle-view\" *ngIf=\"todos.length > 0\">\n    <input\n      id=\"toggle-all\"\n      class=\"toggle-all\"\n      type=\"checkbox\"\n      [formControl]=\"checkField\"\n    />\n    <label (click)=\"toggleAll()\">Mark all as complete</label>\n  </div> -->\n  <ul id=\"todo-list\" class=\"todo-list\">\n    <app-todo\n      (update)=\"onUpdate($event)\"\n      (delete)=\"onDelete($event)\"\n      [todo]=\"todo\"\n      *ngFor=\"let todo of todos\"\n    ></app-todo>\n  </ul>\n</section>\n","import { TodosEffects } from './todos.effects';\n\nexport const EFFECTS: any[] = [\n  TodosEffects\n];\n","import { Injectable } from '@angular/core';\nimport { Actions, Effect, ofType, createEffect } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { switchMap, catchError, mergeMap, map } from 'rxjs/operators';\n\nimport {\n  loadTodos,\n  loadTodosRequest,\n  loadTodosSuccess,\n  loadTodosFail,\n  addTodo,\n  addTodoRequest,\n  addTodoSuccess,\n  addTodoFail,\n  updateTodo,\n  updateTodoRequest,\n  updateTodoSuccess,\n  updateTodoFail,\n  deleteTodo,\n  deleteTodoRequest,\n  deleteTodoSuccess,\n  deleteTodoFail\n} from '@todos/actions';\n\nimport { TodosService } from '@todos/services/todos.service';\n\n@Injectable()\nexport class TodosEffects {\n\n  loadTodosRequest = createEffect(() => this.actions$.pipe(\n    ofType(loadTodosRequest),\n      switchMap(() => {\n      return this.todosService.getAllTodos()\n        .pipe(\n          mergeMap((todos) => [\n            loadTodos({ todos }),\n            loadTodosSuccess(),\n          ]),\n          catchError(error => of(loadTodosFail({ error }))),\n        );\n    }),\n  ));\n\n  addTodoRequest$ = createEffect(() => this.actions$.pipe(\n    ofType(addTodoRequest),\n    switchMap((action) => {\n      return this.todosService.createTodo(action.todo)\n        .pipe(\n          mergeMap((newTodo) => [\n            addTodo({ todo: newTodo }),\n            addTodoSuccess(),\n          ]),\n          catchError(error => of(addTodoFail({ error }))),\n        );\n    }),\n  ));\n\n  updateTodoRequest$ = createEffect(() => this.actions$.pipe(\n    ofType(updateTodoRequest),\n    switchMap((action) => {\n      const update = action.update;\n      return this.todosService.updateTodo(update.changes)\n        .pipe(\n          mergeMap(() => [\n            updateTodo({ update }),\n            updateTodoSuccess(),\n          ]),\n          catchError(error => of(updateTodoFail({ error }))),\n        );\n    }),\n  ));\n\n  deleteTodoRequest$ = createEffect(() => this.actions$.pipe(\n    ofType(deleteTodoRequest),\n    switchMap((action) => {\n      const id = action.id;\n      return this.todosService.deleteTodo(id)\n        .pipe(\n          mergeMap(() => [\n            deleteTodo({ id }),\n            deleteTodoSuccess(),\n          ]),\n          catchError(error => of(deleteTodoFail({ error }))),\n        );\n    }),\n  ));\n\n  constructor(\n    private actions$: Actions,\n    private todosService: TodosService\n  ) { }\n\n}\n","import { TodosGuard } from './todos.guard';\n\nexport const GUARDS: any[] = [\n  TodosGuard\n];\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable , of, forkJoin } from 'rxjs';\nimport { tap, take, switchMap, catchError } from 'rxjs/operators';\n\nimport { TodosModuleState } from '@todos/states';\nimport { getCountAllTodos } from '@todos/selectors';\nimport { loadTodosRequest } from '@todos/actions';\n\n@Injectable()\nexport class TodosGuard implements CanActivate {\n\n  constructor(\n    private store: Store<TodosModuleState>,\n  ) {}\n\n  canActivate(): Observable<boolean> {\n    return forkJoin([\n      this.checkTodos(),\n    ])\n    .pipe(\n      switchMap(() => of(true)),\n      catchError(() => of(false))\n    );\n  }\n\n  private checkTodos() {\n    return this.store.pipe(\n      select(getCountAllTodos),\n      tap(total => {\n        if (total === 0) {\n          this.dispatchLoadTodos();\n        }\n      }),\n      take(1)\n    );\n  }\n\n  private dispatchLoadTodos() {\n    const action = loadTodosRequest();\n    this.store.dispatch(action);\n  }\n\n}\n","import {\n  ActionReducerMap,\n  createFeatureSelector,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from '@environments/environment';\n\nimport { TodosModuleState } from '@todos/states';\n\nimport { todosReducer } from './todos.reducer';\nimport { todosUIReducer } from './todos-ui.reducer';\n\nexport const reducers: ActionReducerMap<TodosModuleState> = {\n  todos: todosReducer,\n  todosUI: todosUIReducer\n};\n\nexport const metaReducers: MetaReducer<TodosModuleState>[] = !environment.production ? [] : [];\n\nexport const getTodosModuleState = createFeatureSelector<TodosModuleState>(\n  'todos-module'\n);\n","import { createReducer, on } from '@ngrx/store';\nimport * as TodoUIActions from '@todos/actions/todos-ui.actions';\nimport { TodosUIState } from '@todos/states';\n\nexport const initialState: TodosUIState = {\n  loadingTodos: false,\n  errorLoadingTodos: null,\n  loadingAddTodo: false,\n  errorAddTodo: null,\n  loadingUpdateTodo: false,\n  errorUpdateTodo: null,\n  loadingDeleteTodo: false,\n  errorDeleteTodo: null,\n};\n\nexport const todosUIReducer = createReducer(\n  initialState,\n  on(TodoUIActions.loadTodosRequest, (state) => {\n    return {\n      ...state,\n      loadingTodos: true,\n      errorLoadingTodos: null\n    };\n  }),\n  on(TodoUIActions.loadTodosSuccess, (state) => {\n    return {\n      ...state,\n      loadingTodos: false,\n      errorLoadingTodos: null\n    };\n  }),\n  on(TodoUIActions.loadTodosFail, (state, {error}) => {\n    return {\n      ...state,\n      loadingTodos: false,\n      errorLoadingTodos: error || null\n    };\n  }),\n  on(TodoUIActions.addTodoRequest, (state) => {\n    return {\n      ...state,\n      loadingAddTodo: true,\n      errorAddTodo: null\n    };\n  }),\n  on(TodoUIActions.loadTodosSuccess, (state) => {\n    return {\n      ...state,\n      loadingAddTodo: false,\n      errorAddTodo: null\n    };\n  }),\n  on(TodoUIActions.loadTodosFail, (state, {error}) => {\n    return {\n      ...state,\n      loadingAddTodo: false,\n      errorAddTodo: error || null\n    };\n  }),\n  on(TodoUIActions.updateTodoRequest, (state) => {\n    return {\n      ...state,\n      loadingUpdateTodo: true,\n      errorUpdateTodo: null\n    };\n  }),\n  on(TodoUIActions.updateTodoSuccess, (state) => {\n    return {\n      ...state,\n      loadingUpdateTodo: false,\n      errorUpdateTodo: null\n    };\n  }),\n  on(TodoUIActions.addTodoFail, (state, {error}) => {\n    return {\n      ...state,\n      loadingUpdateTodo: false,\n      errorUpdateTodo: error || null\n    };\n  }),\n  on(TodoUIActions.deleteTodoRequest, (state) => {\n    return {\n      ...state,\n      loadingDeleteTodo: true,\n      errorDeleteTodo: null\n    };\n  }),\n  on(TodoUIActions.deleteTodoSuccess, (state) => {\n    return {\n      ...state,\n      loadingDeleteTodo: false,\n      errorDeleteTodo: null\n    };\n  }),\n  on(TodoUIActions.deleteTodoFail, (state, {error}) => {\n    return {\n      ...state,\n      loadingDeleteTodo: false,\n      errorDeleteTodo: error || null\n    };\n  }),\n);","import { createReducer, on } from '@ngrx/store';\nimport * as TodoActions from '@todos/actions/todos.actions';\nimport { TodosState, todosAdapter } from '@todos/states';\n\nexport const initialState: TodosState = todosAdapter.getInitialState({\n  // additional entity state properties\n});\n\nexport const todosReducer = createReducer(\n  initialState,\n  on(TodoActions.loadTodos, (state, {todos}) => {\n    return todosAdapter.setAll(todos, state);\n  }),\n  on(TodoActions.addTodo, (state, {todo}) => {\n    return todosAdapter.addOne(todo, state);\n  }),\n  on(TodoActions.updateTodo, (state, {update}) => {\n    return todosAdapter.updateOne(update, state);\n  }),\n  on(TodoActions.deleteTodo, (state, {id}) => {\n    return todosAdapter.removeOne(id, state);\n  }),\n);\n","export * from './todos.selectors';\n","import { createSelector } from '@ngrx/store';\n\nimport { getTodosModuleState } from '@todos/reducers';\nimport { todosAdapter } from '@todos/states';\nimport { getRouterState } from '@app/reducers';\n\nexport const geTodosState = createSelector(\n  getTodosModuleState,\n  state => state.todos\n);\n\nexport const {\n  selectAll: getAllTodos,\n  selectTotal: getCountAllTodos,\n  selectEntities: getEntitiesTodos\n} = todosAdapter.getSelectors(geTodosState);\n\nexport const getVisibleTodos = createSelector(\n  getAllTodos,\n  getRouterState,\n  (todos, router) => {\n    if (router?.state?.params) {\n      const filter = router.state.params.filter;\n        switch (filter) {\n          default:\n            return todos;\n          case 'completed':\n            return todos.filter(t => t.completed);\n          case 'active':\n            return todos.filter(t => !t.completed);\n        }\n    }\n    return todos;\n  }\n);\n\nexport const getTodo = createSelector(\n  getEntitiesTodos,\n  getRouterState,\n  (entities, router) => {\n    if (router?.state?.params) {\n      const id = router.state.params.id;\n      return entities[id];\n    }\n    return null;\n  }\n);\n\nexport const getCountVisibleTodos = createSelector(\n  getVisibleTodos,\n  (todos) => todos.length\n);\n\n\nexport const getFilter = createSelector(\n  getRouterState,\n  (router) => {\n    if (router.state && router.state.params.filter) {\n      const filter = router.state.params.filter;\n      switch (filter) {\n        default:\n          return 'all';\n        case 'completed':\n          return 'completed';\n        case 'active':\n          return 'active';\n      }\n    }\n    return 'all';\n  }\n);\n","import { TodosService } from './todos.service';\n\nexport const SERVICES: any[] = [\n  TodosService\n];\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Todo } from '@todos/models';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class TodosService {\n\n  constructor(\n    @Inject('API_URL') private apiUrl: string,\n    private http: HttpClient\n  ) {\n  }\n\n  getAllTodos(): Observable<Todo[]> {\n    const url = `${this.apiUrl}/todos`;\n    return this.http.get<Todo[]>(url)\n    .pipe(\n      map(todos => todos.slice(0, 10)),\n    );\n  }\n\n  createTodo(todo: Todo): Observable<Todo> {\n    const url = `${this.apiUrl}/todos`;\n    return this.http.post(url, {todo})\n    .pipe(\n      map((response: any) => response.todo),\n    );\n  }\n\n  updateTodo(todo: Partial<Todo>): Observable<Todo> {\n    const url = `${this.apiUrl}/todos/${todo.id}`;\n    return this.http.patch(url, {todo})\n    .pipe(\n      map((response: any) => response.todo),\n    );\n  }\n\n  deleteTodo(id: number): Observable<Todo> {\n    const url = `${this.apiUrl}/todos/${id}`;\n    return this.http.delete(url)\n    .pipe(\n      map((response: any) => response.todo),\n    );\n  }\n\n}\n","export * from './todos.state';\nexport * from './todos-ui.state';\nexport * from './todos-module.state';\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\nimport { Todo } from '@todos/models';\n\n// tslint:disable-next-line: no-empty-interface\nexport interface TodosState extends EntityState<Todo> {}\n\nexport const todosAdapter: EntityAdapter<Todo> = createEntityAdapter<Todo>();\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LayoutContainer } from './containers/layout/layout.container';\nimport { TodoDetailContainer } from './containers/todo-detail/todo-detail.container';\nimport { TodosGuard } from '@todos/guards/todos.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LayoutContainer,\n    canActivate: [ TodosGuard ]\n  },\n  {\n    path: ':filter',\n    component: LayoutContainer,\n    canActivate: [ TodosGuard ]\n  },\n  {\n    path: 'detail/:id',\n    component: TodoDetailContainer,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class TodosRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { TodosRoutingModule } from './todos-routing.module';\n\nimport * as fromComponents from './components';\nimport * as fromContainers from './containers';\nimport * as fromReducers from './reducers';\nimport * as fromServices from './services';\nimport * as fromEffects from './effects';\nimport * as fromGuards from './guards';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TodosRoutingModule,\n    StoreModule.forFeature('todos-module', fromReducers.reducers, {\n      metaReducers: fromReducers.metaReducers\n    }),\n    EffectsModule.forFeature(fromEffects.EFFECTS)\n  ],\n  declarations: [\n    ...fromComponents.COMPONENTS,\n    ...fromContainers.CONTAINERS\n  ],\n  providers: [\n    ...fromServices.SERVICES,\n    ...fromGuards.GUARDS\n  ]\n})\nexport class TodosModule { }\n","import { FormControl } from '@angular/forms';\n\nexport class CustomValidators {\n\n  static isBlank(control: FormControl): { [key: string]: boolean } | null {\n    const value: string = control.value;\n    if (value === null || value === '') {\n      return null;\n    }\n    if (value.trim() === '') {\n      return { is_blank: true };\n    }\n    return null;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}