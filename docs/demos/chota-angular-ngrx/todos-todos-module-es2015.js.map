{"version":3,"sources":["./src/app/todos/states/todos.state.ts","./src/app/todos/actions/todos.actions.ts","./src/app/todos/services/todos.service.ts","./node_modules/@ngrx/entity/__ivy_ngcc__/fesm2015/entity.js","./src/app/todos/selectors/index.ts","./src/app/utils/validators.ts","./src/app/todos/actions/todos-ui.actions.ts","./src/app/todos/components/footer/footer.component.ts","./src/app/todos/components/footer/footer.component.html","./src/app/todos/reducers/index.ts","./src/app/todos/services/index.ts","./src/app/todos/containers/todo-list/todo-list.container.ts","./src/app/todos/containers/todo-list/todo-list.container.html","./src/app/todos/components/todo/todo.component.ts","./src/app/todos/components/todo/todo.component.html","./src/app/todos/containers/index.ts","./src/app/todos/reducers/todos-ui.reducer.ts","./src/app/todos/states/index.ts","./src/app/todos/components/new-todo/new-todo.component.ts","./src/app/todos/components/new-todo/new-todo.component.html","./src/app/todos/guards/todos.guard.ts","./src/app/todos/todos-routing.module.ts","./src/app/todos/guards/index.ts","./src/app/todos/containers/layout/layout.container.ts","./src/app/todos/containers/layout/layout.container.html","./src/app/todos/actions/index.ts","./src/app/todos/containers/todo-detail/todo-detail.container.ts","./src/app/todos/containers/todo-detail/todo-detail.container.html","./src/app/todos/selectors/todos.selectors.ts","./src/app/todos/effects/index.ts","./src/app/todos/effects/todos.effects.ts","./src/app/todos/components/index.ts","./src/app/todos/reducers/todos.reducer.ts","./src/app/todos/todos.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAA+E;AAMxE,MAAM,YAAY,GAAwB,wEAAmB,EAAQ,CAAC;;;;;;;;;;;;;ACN7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAI3C,MAAM,OAAO,GAAG,gEAAY,CACjC,sBAAsB,EACtB,yDAAK,EAAgB,CACtB,CAAC;AAEK,MAAM,UAAU,GAAG,gEAAY,CACpC,yBAAyB,EACzB,yDAAK,EAA0B,CAChC,CAAC;AAEK,MAAM,UAAU,GAAG,gEAAY,CACpC,yBAAyB,EACzB,yDAAK,EAAgB,CACtB,CAAC;AAEK,MAAM,SAAS,GAAG,gEAAY,CACnC,wBAAwB,EACxB,yDAAK,EAAmB,CACzB,CAAC;;;;;;;;;;;;;ACtBF;AAAA;AAAA;AAAA;AAAA;AAAmD;AACD;AAIb;;;AAG9B,MAAM,YAAY;IAEvB,YAC6B,MAAc,EACjC,IAAgB;QADG,WAAM,GAAN,MAAM,CAAQ;QACjC,SAAI,GAAJ,IAAI,CAAY;IAE1B,CAAC;IAED,WAAW;QACT,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,QAAQ,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,GAAG,CAAC;aAChC,IAAI,CACH,0DAAG,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CACjC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAU;QACnB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,QAAQ,CAAC;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,EAAC,IAAI,EAAC,CAAC;aACjC,IAAI,CACH,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CACtC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,IAAmB;QAC5B,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,UAAU,IAAI,CAAC,EAAE,EAAE,CAAC;QAC9C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,EAAC,IAAI,EAAC,CAAC;aAClC,IAAI,CACH,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CACtC,CAAC;IACJ,CAAC;IAED,UAAU,CAAC,EAAU;QACnB,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,MAAM,UAAU,EAAE,EAAE,CAAC;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;aAC3B,IAAI,CACH,0DAAG,CAAC,CAAC,QAAa,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CACtC,CAAC;IACJ,CAAC;;wEAtCU,YAAY,yDAGb,SAAS;+FAHR,YAAY,WAAZ,YAAY;6FAAZ,YAAY;cADxB,wDAAU;;sBAIN,oDAAM;uBAAC,SAAS;;;;;;;;;;;;;;ACXrB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAC6C;AACH;;AAE1C;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,iDAAiD;AACjD;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,0BAA0B,kEAAc;AACxC,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,6BAA6B,EAAE;AAC/B,mBAAmB,EAAE;AACrB,4BAA4B,kEAAc;AAC1C,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kEAAc;AACrC,4BAA4B,kEAAc;AAC1C,uBAAuB,kEAAc;AACrC,yBAAyB,kEAAc;AACvC;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,sCAAsC;AACtC;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mCAAmC;AACnC;AACA;AACA,iDAAiD,WAAW,uCAAuC;AACnG;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,eAAe,EAAE;AACjB;AACA,QAAQ,+DAAS;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,+BAA+B;AAC/B;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,wCAAwC;AACxC,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,SAAS;AACT,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,UAAU,KAAK;AACf;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,EAAE;AACb,WAAW,EAAE;AACb,YAAY;AACZ;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,wCAAwC;AACxC,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,uBAAuB,EAAE;AACzB,uBAAuB,EAAE;AACzB,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA;AACA,8BAA8B,sBAAsB;AACpD;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA,mBAAmB,EAAE;AACrB;AACA;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA,uBAAuB,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,EAAE;AACrB,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA,yCAAyC;AACzC,WAAW,yBAAyB,kBAAkB;AACtD,mBAAmB,EAAE;AACrB,oBAAoB;AACpB;AACA,oCAAoC;AACpC,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA,eAAe,EAAE;AACjB;AACA;AACA;AACA,sDAAsD;AACtD,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA,cAAc,wGAAwG;AACtH;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA,sBAAsB;AACtB,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA,wBAAwB;AACxB,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA,6BAA6B;AAC7B,WAAW,EAKV;AACD;AACA;AACA;AACA;AACA,+BAA+B;AAC/B,WAAW,EAiHV;AACD;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,WAAW,EASV;AACD;AACA;AACA;AACA;AACA,0BAA0B;AAC1B,WAAW,EAyBV;;AAED;AACA;AACA;AACA,cAAc,wGAAwG;A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","file":"todos-todos-module-es2015.js","sourcesContent":["import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport { Todo } from '@todos/models';\r\n\r\n// tslint:disable-next-line: no-empty-interface\r\nexport interface TodosState extends EntityState<Todo> {}\r\n\r\nexport const todosAdapter: EntityAdapter<Todo> = createEntityAdapter<Todo>();\r\n\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\nimport { Todo } from '@todos/models';\r\n\r\nexport const addTodo = createAction(\r\n  '[TodoModule] AddTodo',\r\n  props<{todo: Todo}>()\r\n);\r\n\r\nexport const updateTodo = createAction(\r\n  '[TodoModule] UpdateTodo',\r\n  props<{update: Update<Todo>}>()\r\n);\r\n\r\nexport const deleteTodo = createAction(\r\n  '[TodoModule] DeleteTodo',\r\n  props<{id: number}>()\r\n);\r\n\r\nexport const loadTodos = createAction(\r\n  '[TodoModule] LoadTodos',\r\n  props<{todos: Todo[]}>()\r\n);\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Todo } from '@todos/models';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class TodosService {\r\n\r\n  constructor(\r\n    @Inject('API_URL') private apiUrl: string,\r\n    private http: HttpClient\r\n  ) {\r\n  }\r\n\r\n  getAllTodos(): Observable<Todo[]> {\r\n    const url = `${this.apiUrl}/todos`;\r\n    return this.http.get<Todo[]>(url)\r\n    .pipe(\r\n      map(todos => todos.slice(0, 10)),\r\n    );\r\n  }\r\n\r\n  createTodo(todo: Todo): Observable<Todo> {\r\n    const url = `${this.apiUrl}/todos`;\r\n    return this.http.post(url, {todo})\r\n    .pipe(\r\n      map((response: any) => response.todo),\r\n    );\r\n  }\r\n\r\n  updateTodo(todo: Partial<Todo>): Observable<Todo> {\r\n    const url = `${this.apiUrl}/todos/${todo.id}`;\r\n    return this.http.patch(url, {todo})\r\n    .pipe(\r\n      map((response: any) => response.todo),\r\n    );\r\n  }\r\n\r\n  deleteTodo(id: number): Observable<Todo> {\r\n    const url = `${this.apiUrl}/todos/${id}`;\r\n    return this.http.delete(url)\r\n    .pipe(\r\n      map((response: any) => response.todo),\r\n    );\r\n  }\r\n\r\n}\r\n","/**\n * @license NgRx 9.2.1\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { createSelector } from '@ngrx/store';\nimport { isDevMode } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/entity_state.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template V\n * @return {?}\n */\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\n/**\n * @template V\n * @return {?}\n */\nfunction createInitialStateFactory() {\n    /**\n     * @param {?=} additionalState\n     * @return {?}\n     */\n    function getInitialState(additionalState = {}) {\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/state_selectors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @return {?}\n */\nfunction createSelectorsFactory() {\n    /**\n     * @param {?=} selectState\n     * @return {?}\n     */\n    function getSelectors(selectState) {\n        /** @type {?} */\n        const selectIds = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.ids);\n        /** @type {?} */\n        const selectEntities = (/**\n         * @param {?} state\n         * @return {?}\n         */\n        (state) => state.entities);\n        /** @type {?} */\n        const selectAll = createSelector(selectIds, selectEntities, (/**\n         * @param {?} ids\n         * @param {?} entities\n         * @return {?}\n         */\n        (ids, entities) => ids.map((/**\n         * @param {?} id\n         * @return {?}\n         */\n        (id) => ((/** @type {?} */ (entities)))[id]))));\n        /** @type {?} */\n        const selectTotal = createSelector(selectIds, (/**\n         * @param {?} ids\n         * @return {?}\n         */\n        ids => ids.length));\n        if (!selectState) {\n            return {\n                selectIds,\n                selectEntities,\n                selectAll,\n                selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst DidMutate = {\n    EntitiesOnly: 0,\n    Both: 1,\n    None: 2,\n};\nDidMutate[DidMutate.EntitiesOnly] = 'EntitiesOnly';\nDidMutate[DidMutate.Both] = 'Both';\nDidMutate[DidMutate.None] = 'None';\n/**\n * @template V, R\n * @param {?} mutator\n * @return {?}\n */\nfunction createStateOperator(mutator) {\n    return (/**\n     * @template S\n     * @param {?} arg\n     * @param {?} state\n     * @return {?}\n     */\n    function operation(arg, state) {\n        /** @type {?} */\n        const clonedEntityState = {\n            ids: [...state.ids],\n            entities: Object.assign({}, state.entities),\n        };\n        /** @type {?} */\n        const didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return Object.assign(Object.assign({}, state), { entities: clonedEntityState.entities });\n        }\n        return state;\n    });\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/utils.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} entity\n * @param {?} selectId\n * @return {?}\n */\nfunction selectIdValue(entity, selectId) {\n    /** @type {?} */\n    const key = selectId(entity);\n    if (isDevMode() && key === undefined) {\n        console.warn('@ngrx/entity: The entity passed to the `selectId` implementation returned undefined.', 'You should probably provide your own `selectId` implementation.', 'The entity that was passed:', entity, 'The `selectId` implementation:', selectId.toString());\n    }\n    return key;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/unsorted_state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @return {?}\n */\nfunction createUnsortedStateAdapter(selectId) {\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(entities, state) {\n        /** @type {?} */\n        let didMutate = false;\n        for (const entity of entities) {\n            didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function setAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function setOneMutably(entity, state) {\n        /** @type {?} */\n        const key = selectIdValue(entity, selectId);\n        if (key in state.entities) {\n            state.entities[key] = entity;\n            return DidMutate.EntitiesOnly;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    /**\n     * @param {?} keysOrPredicate\n     * @param {?} state\n     * @return {?}\n     */\n    function removeManyMutably(keysOrPredicate, state) {\n        /** @type {?} */\n        const keys = keysOrPredicate instanceof Array\n            ? keysOrPredicate\n            : state.ids.filter((/**\n             * @param {?} key\n             * @return {?}\n             */\n            (key) => keysOrPredicate(state.entities[key])));\n        /** @type {?} */\n        const didMutate = keys\n            .filter((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => key in state.entities))\n            .map((/**\n         * @param {?} key\n         * @return {?}\n         */\n        (key) => delete state.entities[key])).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @return {?}\n             */\n            (id) => id in state.entities));\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    /**\n     * @param {?} keys\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeNewKey(keys, update, state) {\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        /** @type {?} */\n        const hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const newKeys = {};\n        updates = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => update.id in state.entities));\n        /** @type {?} */\n        const didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            /** @type {?} */\n            const didMutateIds = updates.filter((/**\n             * @param {?} update\n             * @return {?}\n             */\n            update => takeNewKey(newKeys, update, state))).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map((/**\n                 * @param {?} id\n                 * @return {?}\n                 */\n                (id) => newKeys[id] || id));\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    /**\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(map, state) {\n        /** @type {?} */\n        const changes = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = map(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        /** @type {?} */\n        const updates = changes.filter((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ id }) => id in state.entities));\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    return {\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(setAllMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/sorted_state_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} selectId\n * @param {?} sort\n * @return {?}\n */\nfunction createSortedStateAdapter(selectId, sort) {\n    const { removeOne, removeMany, removeAll } = createUnsortedStateAdapter(selectId);\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    /**\n     * @param {?} newModels\n     * @param {?} state\n     * @return {?}\n     */\n    function addManyMutably(newModels, state) {\n        /** @type {?} */\n        const models = newModels.filter((/**\n         * @param {?} model\n         * @return {?}\n         */\n        model => !(selectIdValue(model, selectId) in state.entities)));\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function setAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function setOneMutably(entity, state) {\n        /** @type {?} */\n        const id = selectIdValue(entity, selectId);\n        if (id in state.entities) {\n            state.ids = state.ids.filter((/**\n             * @param {?} val\n             * @return {?}\n             */\n            (val) => val !== id));\n            merge([entity], state);\n            return DidMutate.Both;\n        }\n        else {\n            return addOneMutably(entity, state);\n        }\n    }\n    /**\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    /**\n     * @param {?} models\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        /** @type {?} */\n        const original = state.entities[update.id];\n        /** @type {?} */\n        const updated = Object.assign({}, original, update.changes);\n        /** @type {?} */\n        const newKey = selectIdValue(updated, selectId);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    /**\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    function updateManyMutably(updates, state) {\n        /** @type {?} */\n        const models = [];\n        /** @type {?} */\n        const didMutateIds = updates.filter((/**\n         * @param {?} update\n         * @return {?}\n         */\n        update => takeUpdatedModel(models, update, state))).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            /** @type {?} */\n            const originalIds = state.ids;\n            /** @type {?} */\n            const updatedIndexes = [];\n            state.ids = state.ids.filter((/**\n             * @param {?} id\n             * @param {?} index\n             * @return {?}\n             */\n            (id, index) => {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes.push(index);\n                    return false;\n                }\n            }));\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes.every((/**\n                 * @param {?} i\n                 * @return {?}\n                 */\n                (i) => state.ids[i] === originalIds[i]))) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    /**\n     * @param {?} updatesOrMap\n     * @param {?} state\n     * @return {?}\n     */\n    function mapMutably(updatesOrMap, state) {\n        /** @type {?} */\n        const updates = state.ids.reduce((/**\n         * @param {?} changes\n         * @param {?} id\n         * @return {?}\n         */\n        (changes, id) => {\n            /** @type {?} */\n            const change = updatesOrMap(state.entities[id]);\n            if (change !== state.entities[id]) {\n                changes.push({ id, changes: change });\n            }\n            return changes;\n        }), []);\n        return updateManyMutably(updates, state);\n    }\n    /**\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    /**\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    function upsertManyMutably(entities, state) {\n        /** @type {?} */\n        const added = [];\n        /** @type {?} */\n        const updated = [];\n        for (const entity of entities) {\n            /** @type {?} */\n            const id = selectIdValue(entity, selectId);\n            if (id in state.entities) {\n                updated.push({ id, changes: entity });\n            }\n            else {\n                added.push(entity);\n            }\n        }\n        /** @type {?} */\n        const didMutateByUpdated = updateManyMutably(updated, state);\n        /** @type {?} */\n        const didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n    }\n    /**\n     * @param {?} models\n     * @param {?} state\n     * @return {?}\n     */\n    function merge(models, state) {\n        models.sort(sort);\n        /** @type {?} */\n        const ids = [];\n        /** @type {?} */\n        let i = 0;\n        /** @type {?} */\n        let j = 0;\n        while (i < models.length && j < state.ids.length) {\n            /** @type {?} */\n            const model = models[i];\n            /** @type {?} */\n            const modelId = selectIdValue(model, selectId);\n            /** @type {?} */\n            const entityId = state.ids[j];\n            /** @type {?} */\n            const entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach((/**\n         * @param {?} model\n         * @param {?} i\n         * @return {?}\n         */\n        (model, i) => {\n            state.entities[selectId(model)] = model;\n        }));\n    }\n    return {\n        removeOne,\n        removeMany,\n        removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(setAllMutably),\n        setAll: createStateOperator(setAllMutably),\n        setOne: createStateOperator(setOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        map: createStateOperator(mapMutably),\n    };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/create_adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?=} options\n * @return {?}\n */\nfunction createEntityAdapter(options = {}) {\n    const { selectId, sortComparer } = Object.assign({ sortComparer: false, selectId: (/**\n         * @param {?} instance\n         * @return {?}\n         */\n        (instance) => instance.id) }, options);\n    /** @type {?} */\n    const stateFactory = createInitialStateFactory();\n    /** @type {?} */\n    const selectorsFactory = createSelectorsFactory();\n    /** @type {?} */\n    const stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return Object.assign(Object.assign(Object.assign({ selectId,\n        sortComparer }, stateFactory), selectorsFactory), stateAdapter);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/models.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n * @template T\n */\nfunction DictionaryNum() { }\n/**\n * @abstract\n * @template T\n */\nclass Dictionary {\n}\n/**\n * @record\n * @template T\n */\nfunction UpdateStr() { }\nif (false) {\n    /** @type {?} */\n    UpdateStr.prototype.id;\n    /** @type {?} */\n    UpdateStr.prototype.changes;\n}\n/**\n * @record\n * @template T\n */\nfunction UpdateNum() { }\nif (false) {\n    /** @type {?} */\n    UpdateNum.prototype.id;\n    /** @type {?} */\n    UpdateNum.prototype.changes;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityState() { }\nif (false) {\n    /** @type {?} */\n    EntityState.prototype.ids;\n    /** @type {?} */\n    EntityState.prototype.entities;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityDefinition() { }\nif (false) {\n    /** @type {?} */\n    EntityDefinition.prototype.selectId;\n    /** @type {?} */\n    EntityDefinition.prototype.sortComparer;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityStateAdapter() { }\nif (false) {\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addMany = function (entities, state) { };\n    /**\n     * @deprecated addAll has been renamed. Use setAll instead.\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.addAll = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.setAll = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.setOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeOne = function (key, state) { };\n    /**\n     * @template S\n     * @param {?} key\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeOne = function (key, state) { };\n    /**\n     * @template S\n     * @param {?} keys\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (keys, state) { };\n    /**\n     * @template S\n     * @param {?} keys\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (keys, state) { };\n    /**\n     * @template S\n     * @param {?} predicate\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeMany = function (predicate, state) { };\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.removeAll = function (state) { };\n    /**\n     * @template S\n     * @param {?} update\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.updateOne = function (update, state) { };\n    /**\n     * @template S\n     * @param {?} updates\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.updateMany = function (updates, state) { };\n    /**\n     * @template S\n     * @param {?} entity\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.upsertOne = function (entity, state) { };\n    /**\n     * @template S\n     * @param {?} entities\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.upsertMany = function (entities, state) { };\n    /**\n     * @template S\n     * @param {?} map\n     * @param {?} state\n     * @return {?}\n     */\n    EntityStateAdapter.prototype.map = function (map, state) { };\n}\n/**\n * @record\n * @template T, V\n */\nfunction EntitySelectors() { }\nif (false) {\n    /** @type {?} */\n    EntitySelectors.prototype.selectIds;\n    /** @type {?} */\n    EntitySelectors.prototype.selectEntities;\n    /** @type {?} */\n    EntitySelectors.prototype.selectAll;\n    /** @type {?} */\n    EntitySelectors.prototype.selectTotal;\n}\n/**\n * @record\n * @template T\n */\nfunction EntityAdapter() { }\nif (false) {\n    /** @type {?} */\n    EntityAdapter.prototype.selectId;\n    /** @type {?} */\n    EntityAdapter.prototype.sortComparer;\n    /**\n     * @return {?}\n     */\n    EntityAdapter.prototype.getInitialState = function () { };\n    /**\n     * @template S\n     * @param {?} state\n     * @return {?}\n     */\n    EntityAdapter.prototype.getInitialState = function (state) { };\n    /**\n     * @return {?}\n     */\n    EntityAdapter.prototype.getSelectors = function () { };\n    /**\n     * @template V\n     * @param {?} selectState\n     * @return {?}\n     */\n    EntityAdapter.prototype.getSelectors = function (selectState) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/src/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/public_api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: modules/entity/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Dictionary, createEntityAdapter };\n\n//# sourceMappingURL=entity.js.map","export * from './todos.selectors';\r\n","import { FormControl } from '@angular/forms';\r\n\r\nexport class CustomValidators {\r\n\r\n  static isBlank(control: FormControl): { [key: string]: boolean } | null {\r\n    const value: string = control.value;\r\n    if (value === null || value === '') {\r\n      return null;\r\n    }\r\n    if (value.trim() === '') {\r\n      return { is_blank: true };\r\n    }\r\n    return null;\r\n  }\r\n\r\n}\r\n","import { createAction, props } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { Todo } from '@todos/models';\r\n\r\nexport const loadTodosRequest = createAction(\r\n  '[TodoModule] LoadTodosRequest'\r\n);\r\n\r\nexport const loadTodosSuccess = createAction(\r\n  '[TodoModule] LoadTodosSuccess'\r\n);\r\n\r\nexport const loadTodosFail = createAction(\r\n  '[TodoModule] LoadTodosFail',\r\n  props<{ error: string }>()\r\n);\r\n\r\nexport const addTodoRequest = createAction(\r\n  '[TodoModule] AddTodoRequest',\r\n  props<{ todo: Todo }>()\r\n);\r\n\r\nexport const addTodoSuccess = createAction(\r\n  '[TodoModule] AddTodoSuccess',\r\n);\r\n\r\nexport const addTodoFail = createAction(\r\n  '[TodoModule] AddTodoFail',\r\n  props<{ error: string }>()\r\n);\r\n\r\nexport const updateTodoRequest = createAction(\r\n  '[TodoModule] UpdateTodoRequest',\r\n  props<{ update: Update<Todo> }>()\r\n);\r\n\r\nexport const updateTodoSuccess = createAction(\r\n  '[TodoModule] updateTodoSuccess'\r\n);\r\n\r\nexport const updateTodoFail = createAction(\r\n  '[TodoModule] UpdateTodoFail',\r\n  props<{ error: string }>()\r\n);\r\n\r\nexport const deleteTodoRequest = createAction(\r\n  '[TodoModule] DeleteTodoRequest',\r\n  props<{ id: number }>()\r\n);\r\n\r\nexport const deleteTodoSuccess = createAction(\r\n  '[TodoModule] DeleteTodoSuccess'\r\n);\r\n\r\nexport const deleteTodoFail = createAction(\r\n  '[TodoModule] DeleteTodoFail',\r\n  props<{ error: string }>()\r\n);\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  @Input() countTodos: number;\r\n  @Input() currentFilter: string;\r\n\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // TODO:\r\n  // clearCompleted() {\r\n  //   const action = new TodoActions.ClearCompletedAction();\r\n  //   this.store.dispatch(action);\r\n  // }\r\n\r\n  // TODO\r\n  // completedAll() {\r\n  //   const action = new TodoActions.CompletedAllAction();\r\n  //   this.store.dispatch(action);\r\n  // }\r\n\r\n}\r\n","<footer id=\"footer\" class=\"footer\">\r\n  <span id=\"todo-count\" class=\"todo-count\">{{ countTodos }} items left</span>\r\n  <ul id=\"filters\" class=\"filters\">\r\n    <li>\r\n      <a routerLink=\"/\" [class.selected]=\"currentFilter == 'all'\">\r\n        All\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a routerLink=\"/active\" [class.selected]=\"currentFilter == 'active'\">\r\n        Active\r\n      </a>\r\n    </li>\r\n    <li>\r\n      <a\r\n        routerLink=\"/completed\"\r\n        [class.selected]=\"currentFilter == 'completed'\"\r\n      >\r\n        Completed\r\n      </a>\r\n    </li>\r\n  </ul>\r\n  <!-- <button\r\n    id=\"clear-completed\"\r\n    class=\"clear-completed\"\r\n    (click)=\"clearCompleted()\"\r\n  >\r\n    Clear completed\r\n  </button> -->\r\n</footer>\r\n","import {\r\n  ActionReducerMap,\r\n  createFeatureSelector,\r\n  MetaReducer\r\n} from '@ngrx/store';\r\nimport { environment } from '@environments/environment';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\n\r\nimport { todosReducer } from './todos.reducer';\r\nimport { todosUIReducer } from './todos-ui.reducer';\r\n\r\nexport const reducers: ActionReducerMap<TodosModuleState> = {\r\n  todos: todosReducer,\r\n  todosUI: todosUIReducer\r\n};\r\n\r\nexport const metaReducers: MetaReducer<TodosModuleState>[] = !environment.production ? [] : [];\r\n\r\nexport const getTodosModuleState = createFeatureSelector<TodosModuleState>(\r\n  'todos-module'\r\n);\r\n","import { TodosService } from './todos.service';\r\n\r\nexport const SERVICES: any[] = [\r\n  TodosService\r\n];\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\nimport { deleteTodoRequest, updateTodoRequest } from '@todos/actions';\r\nimport { getVisibleTodos } from '@todos/selectors';\r\nimport { Todo } from '@todos/models';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-todo-list',\r\n  templateUrl: './todo-list.container.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class TodoListContainer implements OnInit {\r\n\r\n  todos$: Observable<Todo[]>;\r\n  checkField: FormControl;\r\n\r\n  constructor(\r\n    private store: Store<TodosModuleState>,\r\n  ) {\r\n    this.checkField = new FormControl(false);\r\n    this.todos$ = this.store.pipe(\r\n      select(getVisibleTodos)\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // TODO\r\n  // toggleAll() {\r\n  //  this.store.dispatch(new TodoActions.CompletedAllAction());\r\n  // }\r\n\r\n  onUpdate(update: Update<Todo>) {\r\n    const action = updateTodoRequest({update});\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n  onDelete(id: number) {\r\n    const action = deleteTodoRequest({id});\r\n    this.store.dispatch(action);\r\n  }\r\n}\r\n","<section id=\"main\" class=\"main\" *ngIf=\"todos$ | async as todos\">\r\n  <!-- <div class=\"toogle-view\" *ngIf=\"todos.length > 0\">\r\n    <input\r\n      id=\"toggle-all\"\r\n      class=\"toggle-all\"\r\n      type=\"checkbox\"\r\n      [formControl]=\"checkField\"\r\n    />\r\n    <label (click)=\"toggleAll()\">Mark all as complete</label>\r\n  </div> -->\r\n  <ul id=\"todo-list\" class=\"todo-list\">\r\n    <app-todo\r\n      (update)=\"onUpdate($event)\"\r\n      (delete)=\"onDelete($event)\"\r\n      [todo]=\"todo\"\r\n      *ngFor=\"let todo of todos\"\r\n    ></app-todo>\r\n  </ul>\r\n</section>\r\n","import { Component, OnInit, Input, ViewChild, Output, EventEmitter, ElementRef, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { Update } from '@ngrx/entity';\r\n\r\nimport { Todo } from '@todos/models';\r\nimport { CustomValidators } from '@app/utils/validators';\r\n\r\n@Component({\r\n  selector: 'app-todo',\r\n  templateUrl: './todo.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TodoComponent implements OnInit {\r\n\r\n  _todo: Todo;\r\n\r\n  @Input()\r\n  set todo(todo: Todo) {\r\n    this._todo = todo;\r\n    this.textField.setValue(this._todo.title);\r\n    this.checkField.setValue(this._todo.completed, {emitEvent: false});\r\n  }\r\n  @ViewChild('textInput', { static: true }) textInput: ElementRef;\r\n  textField: FormControl;\r\n  checkField: FormControl;\r\n  editing: boolean;\r\n\r\n  @Output() update: EventEmitter<Update<Todo>> = new EventEmitter();\r\n  @Output() delete: EventEmitter<number> = new EventEmitter();\r\n\r\n  constructor() {\r\n    this.textField = new FormControl('', [Validators.required, CustomValidators.isBlank]);\r\n    this.checkField = new FormControl(false);\r\n    this.checkField.valueChanges\r\n    .subscribe(state => {\r\n      const update = {\r\n        id: this._todo.id,\r\n        changes: {\r\n          completed: state\r\n        }\r\n      };\r\n      this.update.emit(update);\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  updateText() {\r\n    if (this.textField.valid && this.editing) {\r\n      const update = {\r\n        id: this._todo.id,\r\n        changes: {\r\n          title: this.textField.value\r\n        }\r\n      };\r\n      this.update.emit(update);\r\n      this.editing = false;\r\n    }\r\n  }\r\n\r\n  activeEditMode() {\r\n    this.editing = true;\r\n    setTimeout(() => {\r\n      this.textInput.nativeElement.focus();\r\n    });\r\n  }\r\n\r\n  deleteTodo() {\r\n    this.delete.emit(this._todo.id);\r\n  }\r\n\r\n}\r\n","<li [class.completed]=\"_todo.completed\" [class.editing]=\"editing\">\r\n  <div class=\"view\">\r\n    <input\r\n    class=\"toggle\"\r\n    type=\"checkbox\"\r\n    [formControl]=\"checkField\"/>\r\n    <label\r\n      (dblclick)=\"activeEditMode()\">\r\n      {{ _todo.title }}\r\n    </label>\r\n    <a class=\"detail\" [routerLink]=\"['/detail', _todo.id]\">></a>\r\n    <button class=\"destroy\" (click)=\"deleteTodo()\"></button>\r\n  </div>\r\n  <input\r\n    class=\"edit\"\r\n    type=\"text\"\r\n    #textInput\r\n    (keyup.enter)=\"updateText()\"\r\n    (blur)=\"updateText()\"\r\n    [formControl]=\"textField\"\r\n    [hidden]=\"editing\" />\r\n</li>","import { LayoutContainer } from './layout/layout.container';\r\nimport { TodoListContainer } from './todo-list/todo-list.container';\r\nimport { TodoDetailContainer } from './todo-detail/todo-detail.container';\r\n\r\nexport const CONTAINERS = [\r\n  LayoutContainer,\r\n  TodoListContainer,\r\n  TodoDetailContainer\r\n];\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as TodoUIActions from '@todos/actions/todos-ui.actions';\r\nimport { TodosUIState } from '@todos/states';\r\n\r\nexport const initialState: TodosUIState = {\r\n  loadingTodos: false,\r\n  errorLoadingTodos: null,\r\n  loadingAddTodo: false,\r\n  errorAddTodo: null,\r\n  loadingUpdateTodo: false,\r\n  errorUpdateTodo: null,\r\n  loadingDeleteTodo: false,\r\n  errorDeleteTodo: null,\r\n};\r\n\r\nexport const todosUIReducer = createReducer(\r\n  initialState,\r\n  on(TodoUIActions.loadTodosRequest, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingTodos: true,\r\n      errorLoadingTodos: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.loadTodosSuccess, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingTodos: false,\r\n      errorLoadingTodos: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.loadTodosFail, (state, {error}) => {\r\n    return {\r\n      ...state,\r\n      loadingTodos: false,\r\n      errorLoadingTodos: error || null\r\n    };\r\n  }),\r\n  on(TodoUIActions.addTodoRequest, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingAddTodo: true,\r\n      errorAddTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.loadTodosSuccess, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingAddTodo: false,\r\n      errorAddTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.loadTodosFail, (state, {error}) => {\r\n    return {\r\n      ...state,\r\n      loadingAddTodo: false,\r\n      errorAddTodo: error || null\r\n    };\r\n  }),\r\n  on(TodoUIActions.updateTodoRequest, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingUpdateTodo: true,\r\n      errorUpdateTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.updateTodoSuccess, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingUpdateTodo: false,\r\n      errorUpdateTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.addTodoFail, (state, {error}) => {\r\n    return {\r\n      ...state,\r\n      loadingUpdateTodo: false,\r\n      errorUpdateTodo: error || null\r\n    };\r\n  }),\r\n  on(TodoUIActions.deleteTodoRequest, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingDeleteTodo: true,\r\n      errorDeleteTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.deleteTodoSuccess, (state) => {\r\n    return {\r\n      ...state,\r\n      loadingDeleteTodo: false,\r\n      errorDeleteTodo: null\r\n    };\r\n  }),\r\n  on(TodoUIActions.deleteTodoFail, (state, {error}) => {\r\n    return {\r\n      ...state,\r\n      loadingDeleteTodo: false,\r\n      errorDeleteTodo: error || null\r\n    };\r\n  }),\r\n);","export * from './todos.state';\r\nexport * from './todos-ui.state';\r\nexport * from './todos-module.state';\r\n","import { Component, OnInit, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { CustomValidators } from '@utils/validators';\r\n\r\n@Component({\r\n  selector: 'app-new-todo',\r\n  templateUrl: './new-todo.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NewTodoComponent implements OnInit {\r\n\r\n  textField: FormControl;\r\n\r\n  @Output() saveTodo: EventEmitter<string> = new EventEmitter();\r\n\r\n  constructor() {\r\n    this.textField = new FormControl('', [Validators.required, CustomValidators.isBlank]);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  addTodo() {\r\n    if (this.textField.valid) {\r\n      const text: string = this.textField.value;\r\n      this.textField.setValue('', { emitEvent: false });\r\n      this.saveTodo.emit(text);\r\n    }\r\n  }\r\n\r\n}\r\n","<input \r\n  id=\"new-todo\" \r\n  class=\"new-todo\" \r\n  type=\"text\" \r\n  autofocus \r\n  (keyup.enter)=\"addTodo()\"\r\n  placeholder=\"What needs to be done?\"\r\n  [formControl]=\"textField\" />\r\n    \r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\nimport { Store, select } from '@ngrx/store';\r\nimport { Observable , of, forkJoin } from 'rxjs';\r\nimport { tap, take, switchMap, catchError } from 'rxjs/operators';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\nimport { getCountAllTodos } from '@todos/selectors';\r\nimport { loadTodosRequest } from '@todos/actions';\r\n\r\n@Injectable()\r\nexport class TodosGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private store: Store<TodosModuleState>,\r\n  ) {}\r\n\r\n  canActivate(): Observable<boolean> {\r\n    return forkJoin([\r\n      this.checkTodos(),\r\n    ])\r\n    .pipe(\r\n      switchMap(() => of(true)),\r\n      catchError(() => of(false))\r\n    );\r\n  }\r\n\r\n  private checkTodos() {\r\n    return this.store.pipe(\r\n      select(getCountAllTodos),\r\n      tap(total => {\r\n        if (total === 0) {\r\n          this.dispatchLoadTodos();\r\n        }\r\n      }),\r\n      take(1)\r\n    );\r\n  }\r\n\r\n  private dispatchLoadTodos() {\r\n    const action = loadTodosRequest();\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LayoutContainer } from './containers/layout/layout.container';\r\nimport { TodoDetailContainer } from './containers/todo-detail/todo-detail.container';\r\nimport { TodosGuard } from '@todos/guards/todos.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LayoutContainer,\r\n    canActivate: [ TodosGuard ]\r\n  },\r\n  {\r\n    path: ':filter',\r\n    component: LayoutContainer,\r\n    canActivate: [ TodosGuard ]\r\n  },\r\n  {\r\n    path: 'detail/:id',\r\n    component: TodoDetailContainer,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class TodosRoutingModule { }\r\n","import { TodosGuard } from './todos.guard';\r\n\r\nexport const GUARDS: any[] = [\r\n  TodosGuard\r\n];\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\nimport { addTodoRequest } from '@todos/actions';\r\nimport { getCountVisibleTodos, getFilter } from '@todos/selectors';\r\nimport { Todo } from '@todos/models';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-layout',\r\n  templateUrl: './layout.container.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class LayoutContainer implements OnInit {\r\n\r\n  counter$: Observable<number>;\r\n  filter$: Observable<string>;\r\n\r\n  constructor(\r\n    private store: Store<TodosModuleState>,\r\n  ) {\r\n    this.counter$ = this.store.pipe(\r\n      select(getCountVisibleTodos)\r\n    );\r\n    this.filter$ = this.store.pipe(\r\n      select(getFilter)\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSaveTodo(title: string) {\r\n    const todo: Todo = {\r\n      id: Math.floor(Math.random() * (300 - 200)) + 200,\r\n      title,\r\n      completed: false\r\n    };\r\n    const action = addTodoRequest({todo});\r\n    this.store.dispatch(action);\r\n  }\r\n\r\n}\r\n","<section class=\"todoapp\">\r\n  <header class=\"header\">\r\n    <h1>todos</h1>\r\n    <app-new-todo (saveTodo)=\"onSaveTodo($event)\"></app-new-todo>\r\n  </header>\r\n  <app-todo-list></app-todo-list>\r\n  <app-footer\r\n    [countTodos]=\"counter$ | async\"\r\n    [currentFilter]=\"filter$ | async\"\r\n  ></app-footer>\r\n</section>\r\n<footer class=\"info\">\r\n  <p>Double-click to edit a todo</p>\r\n  <p>Written by <a href=\"http://twitter.com/nicobytes\">Nicolas Molina</a></p>\r\n  <p>\r\n    Using <a href=\"https://angular.io/\">Angular</a> and\r\n    <a href=\"https://ngrx.github.io/\">ngrx/store</a>\r\n  </p>\r\n  <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\r\n</footer>\r\n","export * from './todos.actions';\r\nexport * from './todos-ui.actions';\r\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Store, select } from '@ngrx/store';\r\n\r\nimport { TodosModuleState } from '@todos/states';\r\nimport { getTodo } from '@todos/selectors';\r\nimport { Todo } from '@todos/models';\r\nimport { Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-todo-detail',\r\n  templateUrl: './todo-detail.container.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n// tslint:disable-next-line: component-class-suffix\r\nexport class TodoDetailContainer implements OnInit {\r\n\r\n  todo$: Observable<Todo>;\r\n\r\n  constructor(\r\n    private store: Store<TodosModuleState>\r\n  ) {\r\n    this.todo$ = this.store.pipe(\r\n      select(getTodo),\r\n      filter(todo => todo !== null)\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","<section id=\"main\" class=\"main\" *ngIf=\"todo$ | async as todo\">\r\n  <h1>{{ todo.title }}</h1>\r\n  <p>{{ todo.completed }}</p>\r\n</section>\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport { getTodosModuleState } from '@todos/reducers';\r\nimport { todosAdapter } from '@todos/states';\r\nimport { getRouterState } from '@app/reducers';\r\n\r\nexport const geTodosState = createSelector(\r\n  getTodosModuleState,\r\n  state => state.todos\r\n);\r\n\r\nexport const {\r\n  selectAll: getAllTodos,\r\n  selectTotal: getCountAllTodos,\r\n  selectEntities: getEntitiesTodos\r\n} = todosAdapter.getSelectors(geTodosState);\r\n\r\nexport const getVisibleTodos = createSelector(\r\n  getAllTodos,\r\n  getRouterState,\r\n  (todos, router) => {\r\n    if (router?.state?.params) {\r\n      const filter = router.state.params.filter;\r\n        switch (filter) {\r\n          default:\r\n            return todos;\r\n          case 'completed':\r\n            return todos.filter(t => t.completed);\r\n          case 'active':\r\n            return todos.filter(t => !t.completed);\r\n        }\r\n    }\r\n    return todos;\r\n  }\r\n);\r\n\r\nexport const getTodo = createSelector(\r\n  getEntitiesTodos,\r\n  getRouterState,\r\n  (entities, router) => {\r\n    if (router?.state?.params) {\r\n      const id = router.state.params.id;\r\n      return entities[id];\r\n    }\r\n    return null;\r\n  }\r\n);\r\n\r\nexport const getCountVisibleTodos = createSelector(\r\n  getVisibleTodos,\r\n  (todos) => todos.length\r\n);\r\n\r\n\r\nexport const getFilter = createSelector(\r\n  getRouterState,\r\n  (router) => {\r\n    if (router.state && router.state.params.filter) {\r\n      const filter = router.state.params.filter;\r\n      switch (filter) {\r\n        default:\r\n          return 'all';\r\n        case 'completed':\r\n          return 'completed';\r\n        case 'active':\r\n          return 'active';\r\n      }\r\n    }\r\n    return 'all';\r\n  }\r\n);\r\n","import { TodosEffects } from './todos.effects';\r\n\r\nexport const EFFECTS: any[] = [\r\n  TodosEffects\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect, ofType, createEffect } from '@ngrx/effects';\r\nimport { of } from 'rxjs';\r\nimport { switchMap, catchError, mergeMap, map } from 'rxjs/operators';\r\n\r\nimport {\r\n  loadTodos,\r\n  loadTodosRequest,\r\n  loadTodosSuccess,\r\n  loadTodosFail,\r\n  addTodo,\r\n  addTodoRequest,\r\n  addTodoSuccess,\r\n  addTodoFail,\r\n  updateTodo,\r\n  updateTodoRequest,\r\n  updateTodoSuccess,\r\n  updateTodoFail,\r\n  deleteTodo,\r\n  deleteTodoRequest,\r\n  deleteTodoSuccess,\r\n  deleteTodoFail\r\n} from '@todos/actions';\r\n\r\nimport { TodosService } from '@todos/services/todos.service';\r\n\r\n@Injectable()\r\nexport class TodosEffects {\r\n\r\n  loadTodosRequest = createEffect(() => this.actions$.pipe(\r\n    ofType(loadTodosRequest),\r\n      switchMap(() => {\r\n      return this.todosService.getAllTodos()\r\n        .pipe(\r\n          mergeMap((todos) => [\r\n            loadTodos({ todos }),\r\n            loadTodosSuccess(),\r\n          ]),\r\n          catchError(error => of(loadTodosFail({ error }))),\r\n        );\r\n    }),\r\n  ));\r\n\r\n  addTodoRequest$ = createEffect(() => this.actions$.pipe(\r\n    ofType(addTodoRequest),\r\n    switchMap((action) => {\r\n      return this.todosService.createTodo(action.todo)\r\n        .pipe(\r\n          mergeMap((newTodo) => [\r\n            addTodo({ todo: newTodo }),\r\n            addTodoSuccess(),\r\n          ]),\r\n          catchError(error => of(addTodoFail({ error }))),\r\n        );\r\n    }),\r\n  ));\r\n\r\n  updateTodoRequest$ = createEffect(() => this.actions$.pipe(\r\n    ofType(updateTodoRequest),\r\n    switchMap((action) => {\r\n      const update = action.update;\r\n      return this.todosService.updateTodo(update.changes)\r\n        .pipe(\r\n          mergeMap(() => [\r\n            updateTodo({ update }),\r\n            updateTodoSuccess(),\r\n          ]),\r\n          catchError(error => of(updateTodoFail({ error }))),\r\n        );\r\n    }),\r\n  ));\r\n\r\n  deleteTodoRequest$ = createEffect(() => this.actions$.pipe(\r\n    ofType(deleteTodoRequest),\r\n    switchMap((action) => {\r\n      const id = action.id;\r\n      return this.todosService.deleteTodo(id)\r\n        .pipe(\r\n          mergeMap(() => [\r\n            deleteTodo({ id }),\r\n            deleteTodoSuccess(),\r\n          ]),\r\n          catchError(error => of(deleteTodoFail({ error }))),\r\n        );\r\n    }),\r\n  ));\r\n\r\n  constructor(\r\n    private actions$: Actions,\r\n    private todosService: TodosService\r\n  ) { }\r\n\r\n}\r\n","import { FooterComponent } from './footer/footer.component';\r\nimport { NewTodoComponent } from './new-todo/new-todo.component';\r\nimport { TodoComponent } from './todo/todo.component';\r\n// import AlertComponent from '../../../ui/atoms/Alert/Alert.component';\r\n// import ImageComponent from '../../../ui/atoms/Image/Image.component';\r\n\r\nexport const COMPONENTS = [\r\n  FooterComponent,\r\n  NewTodoComponent,\r\n  TodoComponent,\r\n  // AlertComponent,\r\n  // ImageComponent,\r\n];\r\n","import { createReducer, on } from '@ngrx/store';\r\nimport * as TodoActions from '@todos/actions/todos.actions';\r\nimport { TodosState, todosAdapter } from '@todos/states';\r\n\r\nexport const initialState: TodosState = todosAdapter.getInitialState({\r\n  // additional entity state properties\r\n});\r\n\r\nexport const todosReducer = createReducer(\r\n  initialState,\r\n  on(TodoActions.loadTodos, (state, {todos}) => {\r\n    return todosAdapter.setAll(todos, state);\r\n  }),\r\n  on(TodoActions.addTodo, (state, {todo}) => {\r\n    return todosAdapter.addOne(todo, state);\r\n  }),\r\n  on(TodoActions.updateTodo, (state, {update}) => {\r\n    return todosAdapter.updateOne(update, state);\r\n  }),\r\n  on(TodoActions.deleteTodo, (state, {id}) => {\r\n    return todosAdapter.removeOne(id, state);\r\n  }),\r\n);\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { EffectsModule } from '@ngrx/effects';\r\n\r\nimport { TodosRoutingModule } from './todos-routing.module';\r\n\r\nimport * as fromComponents from './components';\r\nimport * as fromContainers from './containers';\r\nimport * as fromReducers from './reducers';\r\nimport * as fromServices from './services';\r\nimport * as fromEffects from './effects';\r\nimport * as fromGuards from './guards';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    TodosRoutingModule,\r\n    StoreModule.forFeature('todos-module', fromReducers.reducers, {\r\n      metaReducers: fromReducers.metaReducers\r\n    }),\r\n    EffectsModule.forFeature(fromEffects.EFFECTS)\r\n  ],\r\n  declarations: [\r\n    ...fromComponents.COMPONENTS,\r\n    ...fromContainers.CONTAINERS\r\n  ],\r\n  providers: [\r\n    ...fromServices.SERVICES,\r\n    ...fromGuards.GUARDS\r\n  ]\r\n})\r\nexport class TodosModule { }\r\n"],"sourceRoot":"webpack:///"}